//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// verbosity                      I     4
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//





  







  
  



module mkFBox_Core(verbosity,
		   CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  [3 : 0] verbosity;
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  wire [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$server_core_request_put;
  wire [69 : 0] fpu$server_core_response_get;
  wire fpu$EN_server_core_request_put,
       fpu$EN_server_core_response_get,
       fpu$EN_server_reset_request_put,
       fpu$EN_server_reset_response_get,
       fpu$RDY_server_core_request_put,
       fpu$RDY_server_core_response_get,
       fpu$RDY_server_reset_request_put,
       fpu$RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFDIV_D,
       CAN_FIRE_RL_doFDIV_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSQRT_D,
       CAN_FIRE_RL_doFSQRT_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_RL_rl_reset_begin,
       CAN_FIRE_RL_rl_reset_end,
       CAN_FIRE_req,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFDIV_D,
       WILL_FIRE_RL_doFDIV_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSQRT_D,
       WILL_FIRE_RL_doFSQRT_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end,
       WILL_FIRE_req,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR$write_1__VAL_2;
  wire [201 : 0] MUX_fpu$server_core_request_put_1__VAL_1,
		 MUX_fpu$server_core_request_put_1__VAL_10,
		 MUX_fpu$server_core_request_put_1__VAL_11,
		 MUX_fpu$server_core_request_put_1__VAL_12,
		 MUX_fpu$server_core_request_put_1__VAL_13,
		 MUX_fpu$server_core_request_put_1__VAL_14,
		 MUX_fpu$server_core_request_put_1__VAL_15,
		 MUX_fpu$server_core_request_put_1__VAL_16,
		 MUX_fpu$server_core_request_put_1__VAL_17,
		 MUX_fpu$server_core_request_put_1__VAL_18,
		 MUX_fpu$server_core_request_put_1__VAL_2,
		 MUX_fpu$server_core_request_put_1__VAL_3,
		 MUX_fpu$server_core_request_put_1__VAL_4,
		 MUX_fpu$server_core_request_put_1__VAL_5,
		 MUX_fpu$server_core_request_put_1__VAL_6,
		 MUX_fpu$server_core_request_put_1__VAL_7,
		 MUX_fpu$server_core_request_put_1__VAL_8,
		 MUX_fpu$server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1;
  wire MUX_dw_result$wset_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h1105;
  reg [31 : 0] v__h1576;
  reg [31 : 0] v__h1765;
  reg [31 : 0] v__h1966;
  reg [31 : 0] v__h2221;
  reg [31 : 0] v__h2406;
  reg [31 : 0] v__h2591;
  reg [31 : 0] v__h2783;
  reg [31 : 0] v__h2972;
  reg [31 : 0] v__h3160;
  reg [31 : 0] v__h3338;
  reg [31 : 0] v__h3506;
  reg [31 : 0] v__h3686;
  reg [31 : 0] v__h10182;
  reg [31 : 0] v__h16360;
  reg [31 : 0] v__h17986;
  reg [31 : 0] v__h18768;
  reg [31 : 0] v__h21437;
  reg [31 : 0] v__h24003;
  reg [31 : 0] v__h24158;
  reg [31 : 0] v__h24328;
  reg [31 : 0] v__h25846;
  reg [31 : 0] v__h26950;
  reg [31 : 0] v__h28072;
  reg [31 : 0] v__h28555;
  reg [31 : 0] v__h28770;
  reg [31 : 0] v__h28959;
  reg [31 : 0] v__h29141;
  reg [31 : 0] v__h29339;
  reg [31 : 0] v__h29524;
  reg [31 : 0] v__h29709;
  reg [31 : 0] v__h29901;
  reg [31 : 0] v__h30090;
  reg [31 : 0] v__h30278;
  reg [31 : 0] v__h30434;
  reg [31 : 0] v__h30592;
  reg [31 : 0] v__h30755;
  reg [31 : 0] v__h40738;
  reg [31 : 0] v__h50441;
  reg [31 : 0] v__h52050;
  reg [31 : 0] v__h52832;
  reg [31 : 0] v__h101572;
  reg [31 : 0] v__h143329;
  reg [31 : 0] v__h147912;
  reg [31 : 0] v__h152395;
  reg [31 : 0] v__h155125;
  reg [31 : 0] v__h157037;
  reg [31 : 0] v__h158969;
  reg [31 : 0] v__h159116;
  reg [31 : 0] v__h159268;
  reg [31 : 0] v__h10176;
  reg [31 : 0] v__h1099;
  reg [31 : 0] v__h1570;
  reg [31 : 0] v__h1759;
  reg [31 : 0] v__h1960;
  reg [31 : 0] v__h2215;
  reg [31 : 0] v__h2400;
  reg [31 : 0] v__h2585;
  reg [31 : 0] v__h2777;
  reg [31 : 0] v__h2966;
  reg [31 : 0] v__h3154;
  reg [31 : 0] v__h3332;
  reg [31 : 0] v__h3500;
  reg [31 : 0] v__h3680;
  reg [31 : 0] v__h16354;
  reg [31 : 0] v__h17980;
  reg [31 : 0] v__h18762;
  reg [31 : 0] v__h21431;
  reg [31 : 0] v__h23997;
  reg [31 : 0] v__h24152;
  reg [31 : 0] v__h24322;
  reg [31 : 0] v__h25840;
  reg [31 : 0] v__h26944;
  reg [31 : 0] v__h28066;
  reg [31 : 0] v__h28549;
  reg [31 : 0] v__h28764;
  reg [31 : 0] v__h28953;
  reg [31 : 0] v__h29135;
  reg [31 : 0] v__h29333;
  reg [31 : 0] v__h29518;
  reg [31 : 0] v__h29703;
  reg [31 : 0] v__h29895;
  reg [31 : 0] v__h30084;
  reg [31 : 0] v__h30272;
  reg [31 : 0] v__h30428;
  reg [31 : 0] v__h30586;
  reg [31 : 0] v__h30749;
  reg [31 : 0] v__h40732;
  reg [31 : 0] v__h50435;
  reg [31 : 0] v__h52044;
  reg [31 : 0] v__h52826;
  reg [31 : 0] v__h101566;
  reg [31 : 0] v__h143323;
  reg [31 : 0] v__h147906;
  reg [31 : 0] v__h152389;
  reg [31 : 0] v__h155119;
  reg [31 : 0] v__h157031;
  reg [31 : 0] v__h158963;
  reg [31 : 0] v__h159110;
  reg [31 : 0] v__h159262;
  // synopsys translate_on

  // remaining internal signals
  reg [51 : 0] CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q114,
	       CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q115,
	       CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q118,
	       CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q119,
	       CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q116,
	       CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q117,
	       CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q57,
	       CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q45,
	       CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q46,
	       CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q55,
	       CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q41,
	       CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q42,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703;
  reg [22 : 0] CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q84,
	       CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q85,
	       CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q18,
	       CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q19,
	       CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q82,
	       CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q83,
	       CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q80,
	       CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q81,
	       CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q78,
	       CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q79,
	       CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q29,
	       CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q30,
	       CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q27,
	       CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q28,
	       CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q16,
	       CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q17,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784;
  reg [10 : 0] CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q102,
	       CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q103,
	       CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q104,
	       CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q105,
	       CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q106,
	       CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q107,
	       CASE_guard8594_0b0_0_0b1_0_0b10_out_exp9213_0b_ETC__q49,
	       CASE_guard8594_0b0_0_0b1_theResult___exp9210_0_ETC__q50,
	       CASE_guard8863_0b0_0_0b1_0_0b10_out_exp9482_0b_ETC__q44,
	       CASE_guard8863_0b0_0_0b1_theResult___exp9479_0_ETC__q43,
	       CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_theR_ETC__q52,
	       CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_x933_ETC__q53,
	       CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_theR_ETC__q39,
	       CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_x960_ETC__q40,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard8594_ETC__q51,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624;
  reg [7 : 0] CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q76,
	      CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q77,
	      CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_theResu_ETC__q14,
	      CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_x248_BI_ETC__q15,
	      CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q72,
	      CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q73,
	      CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q74,
	      CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q75,
	      CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q70,
	      CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q71,
	      CASE_guard4915_0b0_0_0b1_0_0b10_out_exp5331_0b_ETC__q22,
	      CASE_guard4915_0b0_0_0b1_theResult___exp5328_0_ETC__q23,
	      CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_theRe_ETC__q25,
	      CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_x5456_ETC__q26,
	      CASE_guard703_0b0_0_0b1_0_0b10_out_exp122_0b11_ETC__q9,
	      CASE_guard703_0b0_0_0b1_theResult___exp119_0b1_ETC__q8,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard4915_ETC__q24,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746;
  reg [2 : 0] IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54;
  reg CASE_guard1372_0b0_requestR_BIT_191_0b1_reques_ETC__q92,
      CASE_guard14570_0b0_requestR_BITS_191_TO_160_E_ETC__q108,
      CASE_guard233_0b0_requestR_BIT_159_0b1_request_ETC__q12,
      CASE_guard23878_0b0_requestR_BITS_191_TO_160_E_ETC__q110,
      CASE_guard2508_0b0_requestR_BIT_191_0b1_reques_ETC__q90,
      CASE_guard32945_0b0_requestR_BITS_191_TO_160_E_ETC__q112,
      CASE_guard3519_0b0_requestR_BIT_191_0b1_reques_ETC__q88,
      CASE_guard4784_0b0_requestR_BIT_191_0b1_reques_ETC__q86,
      CASE_guard703_0b0_requestR_BIT_159_0b1_request_ETC__q10,
      CASE_guard8863_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard9593_0b0_requestR_BIT_159_0b1_reques_ETC__q37,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q13,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93;
  wire [85 : 0] IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711,
		b__h50768,
		x__h51444,
		x__h52557;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88;
  wire [63 : 0] IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182,
		IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983,
		res___1__h159367,
		res___1__h159805,
		res___1__h159815,
		res___1__h159834,
		res___1__h28171,
		res___1__h28407,
		res___1__h28417,
		res___1__h28436,
		res__h100515,
		res__h142355,
		res__h146832,
		res__h151415,
		res__h154154,
		res__h156884,
		res__h158796,
		res__h159850,
		res__h160049,
		res__h19532,
		res__h19769,
		res__h25279,
		res__h26797,
		res__h27901,
		res__h28452,
		x__h101653,
		x__h10264,
		x__h143414,
		x__h147997,
		x__h152476,
		x__h155206,
		x__h157118,
		x__h159347,
		x__h159973,
		x__h16441,
		x__h18069,
		x__h18853,
		x__h21522,
		x__h24082,
		x__h24237,
		x__h24409,
		x__h25927,
		x__h27031,
		x__h28151,
		x__h30358,
		x__h30514,
		x__h30672,
		x__h30837,
		x__h3247,
		x__h3418,
		x__h3586,
		x__h3768,
		x__h40820,
		x__h50522,
		x__h52133,
		x__h52913;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877,
		_0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248,
		_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413,
		_theResult____h123868,
		_theResult____h64774,
		_theResult____h82498,
		_theResult___snd__h122482,
		_theResult___snd__h122484,
		_theResult___snd__h122491,
		_theResult___snd__h122497,
		_theResult___snd__h122520,
		_theResult___snd__h132115,
		_theResult___snd__h132126,
		_theResult___snd__h132128,
		_theResult___snd__h132138,
		_theResult___snd__h132144,
		_theResult___snd__h132167,
		_theResult___snd__h140881,
		_theResult___snd__h140895,
		_theResult___snd__h140901,
		_theResult___snd__h140919,
		_theResult___snd__h72892,
		_theResult___snd__h72903,
		_theResult___snd__h72905,
		_theResult___snd__h72915,
		_theResult___snd__h72921,
		_theResult___snd__h72944,
		_theResult___snd__h81518,
		_theResult___snd__h81520,
		_theResult___snd__h81527,
		_theResult___snd__h81533,
		_theResult___snd__h81556,
		_theResult___snd__h90745,
		_theResult___snd__h90756,
		_theResult___snd__h90758,
		_theResult___snd__h90768,
		_theResult___snd__h90774,
		_theResult___snd__h90797,
		_theResult___snd__h99395,
		_theResult___snd__h99409,
		_theResult___snd__h99415,
		_theResult___snd__h99433,
		b__h16687,
		result__h124481,
		result__h83111,
		sfd__h57144,
		sfdin__h132098,
		sfdin__h72875,
		sfdin__h90728,
		x__h124576,
		x__h17363,
		x__h18493,
		x__h83206;
  wire [54 : 0] sfd___3__h38853, sfd___3__h48584, sfd__h30852, sfd__h40832;
  wire [53 : 0] sfd__h122549,
		sfd__h132196,
		sfd__h140954,
		sfd__h38880,
		sfd__h39623,
		sfd__h48611,
		sfd__h49353,
		value__h50770;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710,
		IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475,
		IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659,
		_theResult___fst_sfd__h107459,
		_theResult___fst_sfd__h123285,
		_theResult___fst_sfd__h123288,
		_theResult___fst_sfd__h132932,
		_theResult___fst_sfd__h132935,
		_theResult___fst_sfd__h141714,
		_theResult___fst_sfd__h141717,
		_theResult___fst_sfd__h141726,
		_theResult___fst_sfd__h141732,
		_theResult___fst_sfd__h39577,
		_theResult___fst_sfd__h40333,
		_theResult___fst_sfd__h40336,
		_theResult___fst_sfd__h49307,
		_theResult___fst_sfd__h50062,
		_theResult___fst_sfd__h50065,
		_theResult___fst_sfd__h53440,
		_theResult___sfd__h123187,
		_theResult___sfd__h132834,
		_theResult___sfd__h141616,
		_theResult___sfd__h39480,
		_theResult___sfd__h40236,
		_theResult___sfd__h49211,
		_theResult___sfd__h49966,
		_theResult___snd_fst_sfd__h103605,
		_theResult___snd_fst_sfd__h123291,
		_theResult___snd_fst_sfd__h141720,
		_theResult___snd_fst_sfd__h40339,
		_theResult___snd_fst_sfd__h50068,
		out___1_sfd__h101719,
		out_sfd__h123190,
		out_sfd__h132837,
		out_sfd__h141619,
		out_sfd__h39483,
		out_sfd__h40239,
		out_sfd__h49214,
		out_sfd__h49969,
		value__h52983;
  wire [32 : 0] _theResult_____2__h16622,
		_theResult_____2__h50703,
		out1___1__h17114,
		out1___1__h51195;
  wire [31 : 0] IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831,
		IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999,
		IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699,
		requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h14905,
		sfd___3__h8693,
		sfd__h3789,
		x__h100521,
		x__h16444,
		x__h18072,
		x__h3254,
		x__h3425,
		x__h3593,
		x__h3774,
		x__h50525,
		x__h52136;
  wire [30 : 0] IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33;
  wire [24 : 0] sfd__h14932,
		sfd__h15471,
		sfd__h72973,
		sfd__h81585,
		sfd__h8720,
		sfd__h90826,
		sfd__h9263,
		sfd__h99468,
		value__h16689;
  wire [23 : 0] NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464,
		IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893,
		_theResult___fst_sfd__h100025,
		_theResult___fst_sfd__h100028,
		_theResult___fst_sfd__h100037,
		_theResult___fst_sfd__h100043,
		_theResult___fst_sfd__h101977,
		_theResult___fst_sfd__h15425,
		_theResult___fst_sfd__h15977,
		_theResult___fst_sfd__h15980,
		_theResult___fst_sfd__h64757,
		_theResult___fst_sfd__h73506,
		_theResult___fst_sfd__h73509,
		_theResult___fst_sfd__h82118,
		_theResult___fst_sfd__h82121,
		_theResult___fst_sfd__h91359,
		_theResult___fst_sfd__h91362,
		_theResult___fst_sfd__h9217,
		_theResult___fst_sfd__h9770,
		_theResult___fst_sfd__h9773,
		_theResult___sfd__h15329,
		_theResult___sfd__h15881,
		_theResult___sfd__h73408,
		_theResult___sfd__h82020,
		_theResult___sfd__h9120,
		_theResult___sfd__h91261,
		_theResult___sfd__h9673,
		_theResult___sfd__h99927,
		_theResult___snd_fst_sfd__h100031,
		_theResult___snd_fst_sfd__h15983,
		_theResult___snd_fst_sfd__h57098,
		_theResult___snd_fst_sfd__h82124,
		_theResult___snd_fst_sfd__h9776,
		out_sfd__h15332,
		out_sfd__h15884,
		out_sfd__h73411,
		out_sfd__h82023,
		out_sfd__h9123,
		out_sfd__h91264,
		out_sfd__h9676,
		out_sfd__h99930,
		sV1_sfd__h1309,
		sV2_sfd__h1412,
		value__h101722;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968;
  wire [11 : 0] IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96,
		SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406,
		SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64,
		_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935,
		_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244,
		_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321,
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098,
		_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409,
		x__h124609,
		x__h39608,
		x__h49338,
		x__h83239;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99,
		_theResult___exp__h123186,
		_theResult___exp__h132833,
		_theResult___exp__h141615,
		_theResult___exp__h39479,
		_theResult___exp__h40235,
		_theResult___exp__h49210,
		_theResult___exp__h49965,
		_theResult___fst_exp__h107458,
		_theResult___fst_exp__h122522,
		_theResult___fst_exp__h122528,
		_theResult___fst_exp__h122531,
		_theResult___fst_exp__h123284,
		_theResult___fst_exp__h123287,
		_theResult___fst_exp__h132104,
		_theResult___fst_exp__h132169,
		_theResult___fst_exp__h132175,
		_theResult___fst_exp__h132178,
		_theResult___fst_exp__h132931,
		_theResult___fst_exp__h132934,
		_theResult___fst_exp__h140887,
		_theResult___fst_exp__h140926,
		_theResult___fst_exp__h140932,
		_theResult___fst_exp__h140935,
		_theResult___fst_exp__h141713,
		_theResult___fst_exp__h141716,
		_theResult___fst_exp__h141725,
		_theResult___fst_exp__h141728,
		_theResult___fst_exp__h39576,
		_theResult___fst_exp__h40332,
		_theResult___fst_exp__h40335,
		_theResult___fst_exp__h49306,
		_theResult___fst_exp__h50061,
		_theResult___fst_exp__h50064,
		_theResult___snd_fst_exp__h123290,
		_theResult___snd_fst_exp__h141719,
		_theResult___snd_fst_exp__h40338,
		_theResult___snd_fst_exp__h40341,
		_theResult___snd_fst_exp__h40344,
		_theResult___snd_fst_exp__h50067,
		_theResult___snd_fst_exp__h50070,
		_theResult___snd_fst_exp__h50073,
		din_inc___2_exp__h141751,
		din_inc___2_exp__h141781,
		din_inc___2_exp__h141805,
		din_inc___2_exp__h40378,
		din_inc___2_exp__h50103,
		out_exp__h123189,
		out_exp__h132836,
		out_exp__h141618,
		out_exp__h39482,
		out_exp__h40238,
		out_exp__h49213,
		out_exp__h49968,
		requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702,
		x__h101663;
  wire [8 : 0] IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306,
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665,
	       x__h15456,
	       x__h9248;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752,
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868,
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67,
	       _theResult___exp__h15328,
	       _theResult___exp__h15880,
	       _theResult___exp__h73407,
	       _theResult___exp__h82019,
	       _theResult___exp__h9119,
	       _theResult___exp__h91260,
	       _theResult___exp__h9672,
	       _theResult___exp__h99926,
	       _theResult___fst_exp__h100024,
	       _theResult___fst_exp__h100027,
	       _theResult___fst_exp__h100036,
	       _theResult___fst_exp__h100039,
	       _theResult___fst_exp__h15424,
	       _theResult___fst_exp__h15976,
	       _theResult___fst_exp__h15979,
	       _theResult___fst_exp__h64756,
	       _theResult___fst_exp__h72881,
	       _theResult___fst_exp__h72946,
	       _theResult___fst_exp__h72952,
	       _theResult___fst_exp__h72955,
	       _theResult___fst_exp__h73505,
	       _theResult___fst_exp__h73508,
	       _theResult___fst_exp__h81558,
	       _theResult___fst_exp__h81564,
	       _theResult___fst_exp__h81567,
	       _theResult___fst_exp__h82117,
	       _theResult___fst_exp__h82120,
	       _theResult___fst_exp__h90734,
	       _theResult___fst_exp__h90799,
	       _theResult___fst_exp__h90805,
	       _theResult___fst_exp__h90808,
	       _theResult___fst_exp__h91358,
	       _theResult___fst_exp__h91361,
	       _theResult___fst_exp__h9216,
	       _theResult___fst_exp__h9769,
	       _theResult___fst_exp__h9772,
	       _theResult___fst_exp__h99401,
	       _theResult___fst_exp__h99440,
	       _theResult___fst_exp__h99446,
	       _theResult___fst_exp__h99449,
	       _theResult___snd_fst_exp__h100030,
	       _theResult___snd_fst_exp__h15982,
	       _theResult___snd_fst_exp__h15985,
	       _theResult___snd_fst_exp__h15988,
	       _theResult___snd_fst_exp__h82123,
	       _theResult___snd_fst_exp__h9775,
	       _theResult___snd_fst_exp__h9778,
	       _theResult___snd_fst_exp__h9781,
	       din_inc___2_exp__h100058,
	       din_inc___2_exp__h100082,
	       din_inc___2_exp__h100112,
	       din_inc___2_exp__h100136,
	       din_inc___2_exp__h16018,
	       din_inc___2_exp__h9815,
	       out_exp__h15331,
	       out_exp__h15883,
	       out_exp__h73410,
	       out_exp__h82022,
	       out_exp__h9122,
	       out_exp__h91263,
	       out_exp__h9675,
	       out_exp__h99929,
	       sV1_exp__h1308,
	       sV2_exp__h1411,
	       x__h52923;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170,
	       IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318,
	       IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331,
	       IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534,
	       IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982,
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760,
	       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965,
	       x__h100636,
	       x__h142457,
	       x__h146964,
	       x__h156903,
	       x__h16122,
	       x__h17777,
	       x__h18571,
	       x__h20893,
	       x__h26816,
	       x__h40500,
	       x__h50203,
	       x__h51841,
	       x__h52635,
	       x__h9941;
  wire [1 : 0] IF_sfd___34905_BIT_7_THEN_2_ELSE_0__q21,
	       IF_sfd___34905_BIT_8_THEN_2_ELSE_0__q20,
	       IF_sfd___3693_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3693_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___38584_BIT_1_THEN_2_ELSE_0__q48,
	       IF_sfd___38584_BIT_2_THEN_2_ELSE_0__q47,
	       IF_sfd___38853_BIT_1_THEN_2_ELSE_0__q34,
	       IF_sfd___38853_BIT_2_THEN_2_ELSE_0__q33,
	       IF_sfdin0728_BIT_33_THEN_2_ELSE_0__q66,
	       IF_sfdin2875_BIT_33_THEN_2_ELSE_0__q61,
	       IF_sfdin32098_BIT_4_THEN_2_ELSE_0__q98,
	       IF_theResult___snd1518_BIT_33_THEN_2_ELSE_0__q63,
	       IF_theResult___snd22482_BIT_4_THEN_2_ELSE_0__q95,
	       IF_theResult___snd40881_BIT_4_THEN_2_ELSE_0__q101,
	       IF_theResult___snd9395_BIT_33_THEN_2_ELSE_0__q69,
	       IF_x1444_BIT_53_THEN_2_ELSE_0__q58,
	       IF_x2557_BIT_53_THEN_2_ELSE_0__q59,
	       IF_x7363_BIT_24_THEN_2_ELSE_0__q31,
	       IF_x8493_BIT_24_THEN_2_ELSE_0__q32,
	       guard__h114570,
	       guard__h123878,
	       guard__h132945,
	       guard__h14915,
	       guard__h15441,
	       guard__h16620,
	       guard__h17174,
	       guard__h18272,
	       guard__h38863,
	       guard__h39593,
	       guard__h48594,
	       guard__h49323,
	       guard__h50701,
	       guard__h51255,
	       guard__h52336,
	       guard__h64784,
	       guard__h73519,
	       guard__h82508,
	       guard__h8703,
	       guard__h91372,
	       guard__h9233;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838,
       IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734,
       IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829,
       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958,
       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726,
       IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037,
       IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526,
       IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970,
       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739,
       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947,
       NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311,
       NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956,
       NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931,
       NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145,
       NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628,
       NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276,
       NOT_verbosity_ULE_1_4___d25,
       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242,
       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243,
       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407,
       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100,
       guard__h124476,
       guard__h83106,
       requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863,
       requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875,
       requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880,
       requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859,
       requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920,
       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874,
       requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872,
       requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930,
       requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879,
       requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078,
       requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819,
       requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = dw_result$wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result$wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu$server_core_request_put),
	    .EN_server_core_request_put(fpu$EN_server_core_request_put),
	    .EN_server_core_response_get(fpu$EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu$EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu$EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu$RDY_server_core_request_put),
	    .server_core_response_get(fpu$server_core_response_get),
	    .RDY_server_core_response_get(fpu$RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu$RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu$RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // rule RL_rl_reset_end
  assign CAN_FIRE_RL_rl_reset_end =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign WILL_FIRE_RL_rl_reset_end = CAN_FIRE_RL_rl_reset_end ;

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFDIV_S
  assign CAN_FIRE_RL_doFDIV_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0C ;
  assign WILL_FIRE_RL_doFDIV_S = CAN_FIRE_RL_doFDIV_S ;

  // rule RL_doFSQRT_S
  assign CAN_FIRE_RL_doFSQRT_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2C ;
  assign WILL_FIRE_RL_doFSQRT_S = CAN_FIRE_RL_doFSQRT_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_S = CAN_FIRE_RL_doFSGNJ_S ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = CAN_FIRE_RL_doFSGNJN_S ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFDIV_D
  assign CAN_FIRE_RL_doFDIV_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0D ;
  assign WILL_FIRE_RL_doFDIV_D = CAN_FIRE_RL_doFDIV_D ;

  // rule RL_doFSQRT_D
  assign CAN_FIRE_RL_doFSQRT_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2D ;
  assign WILL_FIRE_RL_doFSQRT_D = CAN_FIRE_RL_doFSQRT_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;

  // rule RL_rl_reset_begin
  assign CAN_FIRE_RL_rl_reset_begin =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_begin = CAN_FIRE_RL_rl_reset_begin ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     fpu$RDY_server_core_response_get && stateR == 2'd2 ;
  assign MUX_dw_result$wset_1__VAL_1 =
	     { x__h159973, fpu$server_core_response_get[4:0] } ;
  assign MUX_fpu$server_core_request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_8 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_9 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd4 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_15 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_16 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_17 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_18 =
	     { 1'd0,
	       requestR[191:128],
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd4 } ;
  assign MUX_requestR$write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR$write_1__VAL_3 =
	     { 1'd1, x__h159973, fpu$server_core_response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, x__h159347, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h157118, x__h156903 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h155206, x__h156903 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h152476, x__h146964 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h147997, x__h146964 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h143414, x__h146964 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h101653, x__h142457 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h52913, x__h100636 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h52133, x__h52635 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h50522, x__h51841 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h40820, x__h50203 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h30837, x__h40500 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h30672, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h30514, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h30358, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h28151, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h27031, x__h26816 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h25927, x__h26816 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h24409, x__h20893 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h24237, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h24082, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h21522, x__h20893 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h18853, x__h20893 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h18069, x__h18571 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h16441, x__h17777 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h10264, x__h16122 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h3768, x__h9941 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h3586, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h3418, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h3247, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ;
  assign dw_result$wget =
	     WILL_FIRE_RL_rl_get_fpu_result ?
	       MUX_dw_result$wset_1__VAL_1 :
	       resultR[68:0] ;

  // register requestR
  assign requestR$D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR$write_1__VAL_2 ;
  assign requestR$EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_35)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req:
	resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFSQRT_D or
	  WILL_FIRE_RL_doFDIV_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFSQRT_S or
	  WILL_FIRE_RL_doFDIV_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR$D_IN = 2'd0;
    EN_req: stateR$D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_D || WILL_FIRE_RL_doFDIV_D ||
    WILL_FIRE_RL_doFNMSUB_D ||
    WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_S || WILL_FIRE_RL_doFDIV_S ||
    WILL_FIRE_RL_doFNMSUB_S ||
    WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFSQRT_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFDIV_S or
	  MUX_fpu$server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSQRT_S or
	  MUX_fpu$server_core_request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$server_core_request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_14 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_15 or
	  WILL_FIRE_RL_doFNMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_16 or
	  WILL_FIRE_RL_doFDIV_D or
	  MUX_fpu$server_core_request_put_1__VAL_17 or
	  WILL_FIRE_RL_doFSQRT_D or MUX_fpu$server_core_request_put_1__VAL_18)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFDIV_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSQRT_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_9;
      WILL_FIRE_RL_doFADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_10;
      WILL_FIRE_RL_doFSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_11;
      WILL_FIRE_RL_doFMUL_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_12;
      WILL_FIRE_RL_doFMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_13;
      WILL_FIRE_RL_doFMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_14;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_15;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_16;
      WILL_FIRE_RL_doFDIV_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_17;
      WILL_FIRE_RL_doFSQRT_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_18;
      default: fpu$server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFSQRT_D ;
  assign fpu$EN_server_core_response_get = MUX_dw_result$wset_1__SEL_1 ;
  assign fpu$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_begin ;
  assign fpu$EN_server_reset_response_get = CAN_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = CAN_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171 ?
	       _theResult___snd__h72944 :
	       _theResult____h64774 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492 ?
	       _theResult___snd__h132167 :
	       _theResult____h123868 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655 ?
	       _theResult___snd__h90797 :
	       _theResult____h82498 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565 ?
	       _theResult___snd__h122520 :
	       _theResult___snd__h140919 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172 ?
	       _theResult___snd__h122520 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333 ?
	       _theResult___snd__h81556 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728 ?
	       _theResult___snd__h81556 :
	       _theResult___snd__h99433 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       ((_theResult___fst_exp__h72881 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard4784_0b0_requestR_BIT_191_0b1_reques_ETC__q86 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87)) :
	       ((_theResult___fst_exp__h81567 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard3519_0b0_requestR_BIT_191_0b1_reques_ETC__q88 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard8863_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36) :
	       ((x__h39608[10:0] == 11'd2047) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard9593_0b0_requestR_BIT_159_0b1_reques_ETC__q37 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       guard__h38863 != 2'b0 :
	       x__h39608[10:0] != 11'd2047 && guard__h39593 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard703_0b0_requestR_BIT_159_0b1_request_ETC__q10 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11) :
	       ((x__h9248[7:0] == 8'd255) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard233_0b0_requestR_BIT_159_0b1_request_ETC__q12 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q13)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       guard__h8703 != 2'b0 :
	       x__h9248[7:0] != 8'd255 && guard__h9233 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       guard__h48594 != 2'b0 :
	       x__h49338[10:0] != 11'd2047 && guard__h49323 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       guard__h14915 != 2'b0 :
	       x__h15456[7:0] != 8'd255 && guard__h15441 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 =
	     (_theResult____h64774[56] ?
		6'd0 :
		(_theResult____h64774[55] ?
		   6'd1 :
		   (_theResult____h64774[54] ?
		      6'd2 :
		      (_theResult____h64774[53] ?
			 6'd3 :
			 (_theResult____h64774[52] ?
			    6'd4 :
			    (_theResult____h64774[51] ?
			       6'd5 :
			       (_theResult____h64774[50] ?
				  6'd6 :
				  (_theResult____h64774[49] ?
				     6'd7 :
				     (_theResult____h64774[48] ?
					6'd8 :
					(_theResult____h64774[47] ?
					   6'd9 :
					   (_theResult____h64774[46] ?
					      6'd10 :
					      (_theResult____h64774[45] ?
						 6'd11 :
						 (_theResult____h64774[44] ?
						    6'd12 :
						    (_theResult____h64774[43] ?
						       6'd13 :
						       (_theResult____h64774[42] ?
							  6'd14 :
							  (_theResult____h64774[41] ?
							     6'd15 :
							     (_theResult____h64774[40] ?
								6'd16 :
								(_theResult____h64774[39] ?
								   6'd17 :
								   (_theResult____h64774[38] ?
								      6'd18 :
								      (_theResult____h64774[37] ?
									 6'd19 :
									 (_theResult____h64774[36] ?
									    6'd20 :
									    (_theResult____h64774[35] ?
									       6'd21 :
									       (_theResult____h64774[34] ?
										  6'd22 :
										  (_theResult____h64774[33] ?
										     6'd23 :
										     (_theResult____h64774[32] ?
											6'd24 :
											(_theResult____h64774[31] ?
											   6'd25 :
											   (_theResult____h64774[30] ?
											      6'd26 :
											      (_theResult____h64774[29] ?
												 6'd27 :
												 (_theResult____h64774[28] ?
												    6'd28 :
												    (_theResult____h64774[27] ?
												       6'd29 :
												       (_theResult____h64774[26] ?
													  6'd30 :
													  (_theResult____h64774[25] ?
													     6'd31 :
													     (_theResult____h64774[24] ?
														6'd32 :
														(_theResult____h64774[23] ?
														   6'd33 :
														   (_theResult____h64774[22] ?
														      6'd34 :
														      (_theResult____h64774[21] ?
															 6'd35 :
															 (_theResult____h64774[20] ?
															    6'd36 :
															    (_theResult____h64774[19] ?
															       6'd37 :
															       (_theResult____h64774[18] ?
																  6'd38 :
																  (_theResult____h64774[17] ?
																     6'd39 :
																     (_theResult____h64774[16] ?
																	6'd40 :
																	(_theResult____h64774[15] ?
																	   6'd41 :
																	   (_theResult____h64774[14] ?
																	      6'd42 :
																	      (_theResult____h64774[13] ?
																		 6'd43 :
																		 (_theResult____h64774[12] ?
																		    6'd44 :
																		    (_theResult____h64774[11] ?
																		       6'd45 :
																		       (_theResult____h64774[10] ?
																			  6'd46 :
																			  (_theResult____h64774[9] ?
																			     6'd47 :
																			     (_theResult____h64774[8] ?
																				6'd48 :
																				(_theResult____h64774[7] ?
																				   6'd49 :
																				   (_theResult____h64774[6] ?
																				      6'd50 :
																				      (_theResult____h64774[5] ?
																					 6'd51 :
																					 (_theResult____h64774[4] ?
																					    6'd52 :
																					    (_theResult____h64774[3] ?
																					       6'd53 :
																					       (_theResult____h64774[2] ?
																						  6'd54 :
																						  (_theResult____h64774[1] ?
																						     6'd55 :
																						     (_theResult____h64774[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 =
	     (_theResult____h123868[56] ?
		6'd0 :
		(_theResult____h123868[55] ?
		   6'd1 :
		   (_theResult____h123868[54] ?
		      6'd2 :
		      (_theResult____h123868[53] ?
			 6'd3 :
			 (_theResult____h123868[52] ?
			    6'd4 :
			    (_theResult____h123868[51] ?
			       6'd5 :
			       (_theResult____h123868[50] ?
				  6'd6 :
				  (_theResult____h123868[49] ?
				     6'd7 :
				     (_theResult____h123868[48] ?
					6'd8 :
					(_theResult____h123868[47] ?
					   6'd9 :
					   (_theResult____h123868[46] ?
					      6'd10 :
					      (_theResult____h123868[45] ?
						 6'd11 :
						 (_theResult____h123868[44] ?
						    6'd12 :
						    (_theResult____h123868[43] ?
						       6'd13 :
						       (_theResult____h123868[42] ?
							  6'd14 :
							  (_theResult____h123868[41] ?
							     6'd15 :
							     (_theResult____h123868[40] ?
								6'd16 :
								(_theResult____h123868[39] ?
								   6'd17 :
								   (_theResult____h123868[38] ?
								      6'd18 :
								      (_theResult____h123868[37] ?
									 6'd19 :
									 (_theResult____h123868[36] ?
									    6'd20 :
									    (_theResult____h123868[35] ?
									       6'd21 :
									       (_theResult____h123868[34] ?
										  6'd22 :
										  (_theResult____h123868[33] ?
										     6'd23 :
										     (_theResult____h123868[32] ?
											6'd24 :
											(_theResult____h123868[31] ?
											   6'd25 :
											   (_theResult____h123868[30] ?
											      6'd26 :
											      (_theResult____h123868[29] ?
												 6'd27 :
												 (_theResult____h123868[28] ?
												    6'd28 :
												    (_theResult____h123868[27] ?
												       6'd29 :
												       (_theResult____h123868[26] ?
													  6'd30 :
													  (_theResult____h123868[25] ?
													     6'd31 :
													     (_theResult____h123868[24] ?
														6'd32 :
														(_theResult____h123868[23] ?
														   6'd33 :
														   (_theResult____h123868[22] ?
														      6'd34 :
														      (_theResult____h123868[21] ?
															 6'd35 :
															 (_theResult____h123868[20] ?
															    6'd36 :
															    (_theResult____h123868[19] ?
															       6'd37 :
															       (_theResult____h123868[18] ?
																  6'd38 :
																  (_theResult____h123868[17] ?
																     6'd39 :
																     (_theResult____h123868[16] ?
																	6'd40 :
																	(_theResult____h123868[15] ?
																	   6'd41 :
																	   (_theResult____h123868[14] ?
																	      6'd42 :
																	      (_theResult____h123868[13] ?
																		 6'd43 :
																		 (_theResult____h123868[12] ?
																		    6'd44 :
																		    (_theResult____h123868[11] ?
																		       6'd45 :
																		       (_theResult____h123868[10] ?
																			  6'd46 :
																			  (_theResult____h123868[9] ?
																			     6'd47 :
																			     (_theResult____h123868[8] ?
																				6'd48 :
																				(_theResult____h123868[7] ?
																				   6'd49 :
																				   (_theResult____h123868[6] ?
																				      6'd50 :
																				      (_theResult____h123868[5] ?
																					 6'd51 :
																					 (_theResult____h123868[4] ?
																					    6'd52 :
																					    (_theResult____h123868[3] ?
																					       6'd53 :
																					       (_theResult____h123868[2] ?
																						  6'd54 :
																						  (_theResult____h123868[1] ?
																						     6'd55 :
																						     (_theResult____h123868[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 =
	     (_theResult____h82498[56] ?
		6'd0 :
		(_theResult____h82498[55] ?
		   6'd1 :
		   (_theResult____h82498[54] ?
		      6'd2 :
		      (_theResult____h82498[53] ?
			 6'd3 :
			 (_theResult____h82498[52] ?
			    6'd4 :
			    (_theResult____h82498[51] ?
			       6'd5 :
			       (_theResult____h82498[50] ?
				  6'd6 :
				  (_theResult____h82498[49] ?
				     6'd7 :
				     (_theResult____h82498[48] ?
					6'd8 :
					(_theResult____h82498[47] ?
					   6'd9 :
					   (_theResult____h82498[46] ?
					      6'd10 :
					      (_theResult____h82498[45] ?
						 6'd11 :
						 (_theResult____h82498[44] ?
						    6'd12 :
						    (_theResult____h82498[43] ?
						       6'd13 :
						       (_theResult____h82498[42] ?
							  6'd14 :
							  (_theResult____h82498[41] ?
							     6'd15 :
							     (_theResult____h82498[40] ?
								6'd16 :
								(_theResult____h82498[39] ?
								   6'd17 :
								   (_theResult____h82498[38] ?
								      6'd18 :
								      (_theResult____h82498[37] ?
									 6'd19 :
									 (_theResult____h82498[36] ?
									    6'd20 :
									    (_theResult____h82498[35] ?
									       6'd21 :
									       (_theResult____h82498[34] ?
										  6'd22 :
										  (_theResult____h82498[33] ?
										     6'd23 :
										     (_theResult____h82498[32] ?
											6'd24 :
											(_theResult____h82498[31] ?
											   6'd25 :
											   (_theResult____h82498[30] ?
											      6'd26 :
											      (_theResult____h82498[29] ?
												 6'd27 :
												 (_theResult____h82498[28] ?
												    6'd28 :
												    (_theResult____h82498[27] ?
												       6'd29 :
												       (_theResult____h82498[26] ?
													  6'd30 :
													  (_theResult____h82498[25] ?
													     6'd31 :
													     (_theResult____h82498[24] ?
														6'd32 :
														(_theResult____h82498[23] ?
														   6'd33 :
														   (_theResult____h82498[22] ?
														      6'd34 :
														      (_theResult____h82498[21] ?
															 6'd35 :
															 (_theResult____h82498[20] ?
															    6'd36 :
															    (_theResult____h82498[19] ?
															       6'd37 :
															       (_theResult____h82498[18] ?
																  6'd38 :
																  (_theResult____h82498[17] ?
																     6'd39 :
																     (_theResult____h82498[16] ?
																	6'd40 :
																	(_theResult____h82498[15] ?
																	   6'd41 :
																	   (_theResult____h82498[14] ?
																	      6'd42 :
																	      (_theResult____h82498[13] ?
																		 6'd43 :
																		 (_theResult____h82498[12] ?
																		    6'd44 :
																		    (_theResult____h82498[11] ?
																		       6'd45 :
																		       (_theResult____h82498[10] ?
																			  6'd46 :
																			  (_theResult____h82498[9] ?
																			     6'd47 :
																			     (_theResult____h82498[8] ?
																				6'd48 :
																				(_theResult____h82498[7] ?
																				   6'd49 :
																				   (_theResult____h82498[6] ?
																				      6'd50 :
																				      (_theResult____h82498[5] ?
																					 6'd51 :
																					 (_theResult____h82498[4] ?
																					    6'd52 :
																					    (_theResult____h82498[3] ?
																					       6'd53 :
																					       (_theResult____h82498[2] ?
																						  6'd54 :
																						  (_theResult____h82498[1] ?
																						     6'd55 :
																						     (_theResult____h82498[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734 =
	     (_theResult___fst_exp__h132104 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard23878_0b0_requestR_BITS_191_TO_160_E_ETC__q110 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228 =
	     (guard__h64784 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h72881 :
	       _theResult___exp__h73407 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230 =
	     (guard__h64784 == 2'b0) ?
	       _theResult___fst_exp__h72881 :
	       (requestR[191] ?
		  _theResult___exp__h73407 :
		  _theResult___fst_exp__h72881) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815 =
	     (guard__h64784 == 2'b0 || requestR[191]) ?
	       sfdin__h72875[56:34] :
	       _theResult___sfd__h73408 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817 =
	     (guard__h64784 == 2'b0) ?
	       sfdin__h72875[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h73408 :
		  sfdin__h72875[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549 =
	     (guard__h123878 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h132104 :
	       _theResult___exp__h132833 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551 =
	     (guard__h123878 == 2'b0) ?
	       _theResult___fst_exp__h132104 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h132833 :
		  _theResult___fst_exp__h132104) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678 =
	     (guard__h123878 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h132098[56:5] :
	       _theResult___sfd__h132834 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680 =
	     (guard__h123878 == 2'b0) ?
	       sfdin__h132098[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h132834 :
		  sfdin__h132098[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712 =
	     (guard__h82508 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h90734 :
	       _theResult___exp__h91260 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714 =
	     (guard__h82508 == 2'b0) ?
	       _theResult___fst_exp__h90734 :
	       (requestR[191] ?
		  _theResult___exp__h91260 :
		  _theResult___fst_exp__h90734) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861 =
	     (guard__h82508 == 2'b0 || requestR[191]) ?
	       sfdin__h90728[56:34] :
	       _theResult___sfd__h91261 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863 =
	     (guard__h82508 == 2'b0) ?
	       sfdin__h90728[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h91261 :
		  sfdin__h90728[56:34]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224 =
	     (guard__h114570 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h122531 :
	       _theResult___exp__h123186 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226 =
	     (guard__h114570 == 2'b0) ?
	       _theResult___fst_exp__h122531 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h123186 :
		  _theResult___fst_exp__h122531) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618 =
	     (guard__h132945 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h140935 :
	       _theResult___exp__h141615 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620 =
	     (guard__h132945 == 2'b0) ?
	       _theResult___fst_exp__h140935 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h141615 :
		  _theResult___fst_exp__h140935) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651 =
	     (guard__h114570 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h122482[56:5] :
	       _theResult___sfd__h123187 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653 =
	     (guard__h114570 == 2'b0) ?
	       _theResult___snd__h122482[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h123187 :
		  _theResult___snd__h122482[56:5]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697 =
	     (guard__h132945 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h140881[56:5] :
	       _theResult___sfd__h141616 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699 =
	     (guard__h132945 == 2'b0) ?
	       _theResult___snd__h140881[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h141616 :
		  _theResult___snd__h140881[56:5]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385 =
	     (guard__h73519 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h81567 :
	       _theResult___exp__h82019 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387 =
	     (guard__h73519 == 2'b0) ?
	       _theResult___fst_exp__h81567 :
	       (requestR[191] ?
		  _theResult___exp__h82019 :
		  _theResult___fst_exp__h81567) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781 =
	     (guard__h91372 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h99449 :
	       _theResult___exp__h99926 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783 =
	     (guard__h91372 == 2'b0) ?
	       _theResult___fst_exp__h99449 :
	       (requestR[191] ?
		  _theResult___exp__h99926 :
		  _theResult___fst_exp__h99449) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834 =
	     (guard__h73519 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h81518[56:34] :
	       _theResult___sfd__h82020 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836 =
	     (guard__h73519 == 2'b0) ?
	       _theResult___snd__h81518[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h82020 :
		  _theResult___snd__h81518[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880 =
	     (guard__h91372 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h99395[56:34] :
	       _theResult___sfd__h99927 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882 =
	     (guard__h91372 == 2'b0) ?
	       _theResult___snd__h99395[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h99927 :
		  _theResult___snd__h99395[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742 =
	     (_theResult___fst_exp__h140935 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard32945_0b0_requestR_BITS_191_TO_160_E_ETC__q112 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398 =
	     (guard__h38863 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h39479 : 11'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424 =
	     (guard__h39593 == 2'b0 || requestR[159]) ?
	       x__h39608[10:0] :
	       _theResult___exp__h40235 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426 =
	     (guard__h39593 == 2'b0) ?
	       x__h39608[10:0] :
	       (requestR[159] ? _theResult___exp__h40235 : x__h39608[10:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447 =
	     (guard__h38863 == 2'b0 || requestR[159]) ?
	       sfd___3__h38853[54:3] :
	       _theResult___sfd__h39480 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449 =
	     (guard__h38863 == 2'b0) ?
	       sfd___3__h38853[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h39480 :
		  sfd___3__h38853[54:3]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465 =
	     (guard__h39593 == 2'b0 || requestR[159]) ?
	       sfd___3__h38853[53:2] :
	       _theResult___sfd__h40236 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467 =
	     (guard__h39593 == 2'b0) ?
	       sfd___3__h38853[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h40236 :
		  sfd___3__h38853[53:2]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395 =
	     (guard__h8703 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h9119 : 8'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421 =
	     (guard__h9233 == 2'b0 || requestR[159]) ?
	       x__h9248[7:0] :
	       _theResult___exp__h9672 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423 =
	     (guard__h9233 == 2'b0) ?
	       x__h9248[7:0] :
	       (requestR[159] ? _theResult___exp__h9672 : x__h9248[7:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444 =
	     (guard__h8703 == 2'b0 || requestR[159]) ?
	       sfd___3__h8693[31:9] :
	       _theResult___sfd__h9120 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446 =
	     (guard__h8703 == 2'b0) ?
	       sfd___3__h8693[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h9120 :
		  sfd___3__h8693[31:9]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462 =
	     (guard__h9233 == 2'b0 || requestR[159]) ?
	       sfd___3__h8693[30:8] :
	       _theResult___sfd__h9673 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464 =
	     (guard__h9233 == 2'b0) ?
	       sfd___3__h8693[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h9673 :
		  sfd___3__h8693[30:8]) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083 =
	     (sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412[22] ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       (IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 ?
		  requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
		  IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087 =
	     (sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412 != 23'd0 &&
	      !sV2_sfd__h1412[22]) ?
	       res__h19769 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098 =
	     IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100 =
	     (sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       (IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052 ?
		  requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
		  IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104 =
	     (sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412 != 23'd0 &&
	      !sV2_sfd__h1412[22]) ?
	       res__h19769 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22]) ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22] &&
	      sV2_exp__h1411 == 8'd255 &&
	      sV2_sfd__h1412[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	      !sV1_sfd__h1309[22]) ?
	       res__h19532 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22]) ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22] &&
	      sV2_exp__h1411 == 8'd255 &&
	      sV2_sfd__h1412[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	      !sV1_sfd__h1309[22]) ?
	       res__h19532 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181 =
	     (sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0) ?
	       res___1__h28417 :
	       ((sV1_exp__h1308 == 8'd0) ? res___1__h28436 : res__h28452) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 == 23'd0) ?
	       res___1__h28407 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 =
	     ((sV1_exp__h1308 == 8'd0) ?
		(sV1_sfd__h1309[22] ?
		   6'd2 :
		   (sV1_sfd__h1309[21] ?
		      6'd3 :
		      (sV1_sfd__h1309[20] ?
			 6'd4 :
			 (sV1_sfd__h1309[19] ?
			    6'd5 :
			    (sV1_sfd__h1309[18] ?
			       6'd6 :
			       (sV1_sfd__h1309[17] ?
				  6'd7 :
				  (sV1_sfd__h1309[16] ?
				     6'd8 :
				     (sV1_sfd__h1309[15] ?
					6'd9 :
					(sV1_sfd__h1309[14] ?
					   6'd10 :
					   (sV1_sfd__h1309[13] ?
					      6'd11 :
					      (sV1_sfd__h1309[12] ?
						 6'd12 :
						 (sV1_sfd__h1309[11] ?
						    6'd13 :
						    (sV1_sfd__h1309[10] ?
						       6'd14 :
						       (sV1_sfd__h1309[9] ?
							  6'd15 :
							  (sV1_sfd__h1309[8] ?
							     6'd16 :
							     (sV1_sfd__h1309[7] ?
								6'd17 :
								(sV1_sfd__h1309[6] ?
								   6'd18 :
								   (sV1_sfd__h1309[5] ?
								      6'd19 :
								      (sV1_sfd__h1309[4] ?
									 6'd20 :
									 (sV1_sfd__h1309[3] ?
									    6'd21 :
									    (sV1_sfd__h1309[2] ?
									       6'd22 :
									       (sV1_sfd__h1309[1] ?
										  6'd23 :
										  (sV1_sfd__h1309[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0) ?
	       _theResult___snd_fst_sfd__h103605 :
	       _theResult___fst_sfd__h141732 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 ||
	      (sV1_exp__h1308 == 8'd255 || sV1_exp__h1308 == 8'd0) &&
	      sV1_sfd__h1309 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h1308 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726 :
		  IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[4] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[4] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0) ?
	       sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	       !sV1_sfd__h1309[22] :
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[3] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[3] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805 =
	     (sV1_exp__h1308 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[2] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ||
		_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[1]) :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829 =
	     (sV1_exp__h1308 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[0] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 == 23'd0) ?
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 :
	       ((sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997 =
	     (sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995) ;
  assign IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 =
	     sfd__h3789[31] ?
	       6'd0 :
	       (sfd__h3789[30] ?
		  6'd1 :
		  (sfd__h3789[29] ?
		     6'd2 :
		     (sfd__h3789[28] ?
			6'd3 :
			(sfd__h3789[27] ?
			   6'd4 :
			   (sfd__h3789[26] ?
			      6'd5 :
			      (sfd__h3789[25] ?
				 6'd6 :
				 (sfd__h3789[24] ?
				    6'd7 :
				    (sfd__h3789[23] ?
				       6'd8 :
				       (sfd__h3789[22] ?
					  6'd9 :
					  (sfd__h3789[21] ?
					     6'd10 :
					     (sfd__h3789[20] ?
						6'd11 :
						(sfd__h3789[19] ?
						   6'd12 :
						   (sfd__h3789[18] ?
						      6'd13 :
						      (sfd__h3789[17] ?
							 6'd14 :
							 (sfd__h3789[16] ?
							    6'd15 :
							    (sfd__h3789[15] ?
							       6'd16 :
							       (sfd__h3789[14] ?
								  6'd17 :
								  (sfd__h3789[13] ?
								     6'd18 :
								     (sfd__h3789[12] ?
									6'd19 :
									(sfd__h3789[11] ?
									   6'd20 :
									   (sfd__h3789[10] ?
									      6'd21 :
									      (sfd__h3789[9] ?
										 6'd22 :
										 (sfd__h3789[8] ?
										    6'd23 :
										    (sfd__h3789[7] ?
										       6'd24 :
										       (sfd__h3789[6] ?
											  6'd25 :
											  (sfd__h3789[5] ?
											     6'd26 :
											     (sfd__h3789[4] ?
												6'd27 :
												(sfd__h3789[3] ?
												   6'd28 :
												   (sfd__h3789[2] ?
												      6'd29 :
												      (sfd__h3789[1] ?
													 6'd30 :
													 (sfd__h3789[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 =
	     sfd__h3789[31] ?
	       6'd0 :
	       (sfd__h3789[30] ?
		  6'd1 :
		  (sfd__h3789[29] ?
		     6'd2 :
		     (sfd__h3789[28] ?
			6'd3 :
			(sfd__h3789[27] ?
			   6'd4 :
			   (sfd__h3789[26] ?
			      6'd5 :
			      (sfd__h3789[25] ?
				 6'd6 :
				 (sfd__h3789[24] ?
				    6'd7 :
				    (sfd__h3789[23] ?
				       6'd8 :
				       (sfd__h3789[22] ?
					  6'd9 :
					  (sfd__h3789[21] ?
					     6'd10 :
					     (sfd__h3789[20] ?
						6'd11 :
						(sfd__h3789[19] ?
						   6'd12 :
						   (sfd__h3789[18] ?
						      6'd13 :
						      (sfd__h3789[17] ?
							 6'd14 :
							 (sfd__h3789[16] ?
							    6'd15 :
							    (sfd__h3789[15] ?
							       6'd16 :
							       (sfd__h3789[14] ?
								  6'd17 :
								  (sfd__h3789[13] ?
								     6'd18 :
								     (sfd__h3789[12] ?
									6'd19 :
									(sfd__h3789[11] ?
									   6'd20 :
									   (sfd__h3789[10] ?
									      6'd21 :
									      (sfd__h3789[9] ?
										 6'd22 :
										 (sfd__h3789[8] ?
										    6'd23 :
										    (sfd__h3789[7] ?
										       6'd24 :
										       (sfd__h3789[6] ?
											  6'd25 :
											  (sfd__h3789[5] ?
											     6'd26 :
											     (sfd__h3789[4] ?
												6'd27 :
												(sfd__h3789[3] ?
												   6'd28 :
												   (sfd__h3789[2] ?
												      6'd29 :
												      (sfd__h3789[1] ?
													 6'd30 :
													 (sfd__h3789[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 ?
		  ((x__h17363[56:25] == 32'h7FFFFFFF) ?
		     x__h17363[56:25] :
		     x__h17363[56:25] + 32'd1) :
		  x__h17363[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	      20'd1048545) ?
	       ((_theResult_____2__h16622[32:31] == 2'b11) ?
		  _theResult_____2__h16622[31:0] :
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865) :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] ?
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	      20'd1048545) ?
	       _theResult_____2__h16622[32:31] == 2'b11 &&
	       guard__h16620 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] &&
	       (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 ||
		guard__h17174 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 ?
		  ((x__h18493[56:25] == 32'hFFFFFFFF) ?
		     x__h18493[56:25] :
		     x__h18493[56:25] + 32'd1) :
		  x__h18493[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 ?
		  ((x__h51444[85:54] == 32'h7FFFFFFF) ?
		     x__h51444[85:54] :
		     x__h51444[85:54] + 32'd1) :
		  x__h51444[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	      24'd16777185) ?
	       ((_theResult_____2__h50703[32:31] == 2'b11) ?
		  _theResult_____2__h50703[31:0] :
		  IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699) :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] ?
		  IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	      24'd16777185) ?
	       _theResult_____2__h50703[32:31] == 2'b11 &&
	       guard__h50701 != 2'd0 :
	       !NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] &&
	       (!NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 ||
		guard__h51255 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 ?
		  ((x__h52557[85:54] == 32'hFFFFFFFF) ?
		     x__h52557[85:54] :
		     x__h52557[85:54] + 32'd1) :
		  x__h52557[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ||
	      _theResult___fst_exp__h122531 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard14570_0b0_requestR_BITS_191_TO_160_E_ETC__q108 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109) ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 ||
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 &&
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067 :
	       !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 ||
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 &&
	       !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 =
	     ((SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99[10],
		  SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734 :
		  IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[2] :
	       _theResult___fst_exp__h141716 == 11'd2047 &&
	       _theResult___fst_sfd__h141717 == 52'd0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[1] :
	       _theResult___fst_exp__h140935 == 11'd0 &&
	       guard__h132945 != 2'b0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[0] :
	       _theResult___fst_exp__h140935 != 11'd2047 &&
	       guard__h132945 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 =
	     ((SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67[7],
		  SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       ((_theResult___fst_exp__h90734 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard2508_0b0_requestR_BIT_191_0b1_reques_ETC__q90 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91)) :
	       ((_theResult___fst_exp__h99449 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard1372_0b0_requestR_BIT_191_0b1_reques_ETC__q92 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93)) ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[2] :
	       _theResult___fst_exp__h100027 == 8'd255 &&
	       _theResult___fst_sfd__h100028 == 23'd0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[1] :
	       _theResult___fst_exp__h99449 == 8'd0 && guard__h91372 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[0] :
	       _theResult___fst_exp__h99449 != 8'd255 &&
	       guard__h91372 != 2'b0 ;
  assign IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859) ?
	       requestR[191:128] :
	       (requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 ?
		  requestR[127:64] :
		  res__h146832) ;
  assign IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 =
	     sV2_exp__h1411 == 8'd0 && sV2_sfd__h1412 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h1308 == 8'd0 &&
	     sV1_sfd__h1309 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h40339 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ||
	      _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h50068 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h3789[31] && !sfd__h3789[30] && !sfd__h3789[29] &&
	      !sfd__h3789[28] &&
	      !sfd__h3789[27] &&
	      !sfd__h3789[26] &&
	      !sfd__h3789[25] &&
	      !sfd__h3789[24] &&
	      !sfd__h3789[23] &&
	      !sfd__h3789[22] &&
	      !sfd__h3789[21] &&
	      !sfd__h3789[20] &&
	      !sfd__h3789[19] &&
	      !sfd__h3789[18] &&
	      !sfd__h3789[17] &&
	      !sfd__h3789[16] &&
	      !sfd__h3789[15] &&
	      !sfd__h3789[14] &&
	      !sfd__h3789[13] &&
	      !sfd__h3789[12] &&
	      !sfd__h3789[11] &&
	      !sfd__h3789[10] &&
	      !sfd__h3789[9] &&
	      !sfd__h3789[8] &&
	      !sfd__h3789[7] &&
	      !sfd__h3789[6] &&
	      !sfd__h3789[5] &&
	      !sfd__h3789[4] &&
	      !sfd__h3789[3] &&
	      !sfd__h3789[2] &&
	      !sfd__h3789[1] &&
	      !sfd__h3789[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h9781 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h15988 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905 =
	     requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859 ?
	       requestR[127:64] :
	       (requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 ?
		  requestR[191:128] :
		  res__h151415) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h159815 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h159834 :
		  res__h159850) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915 :
		  requestR[191]) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933 :
		  requestR[191]) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[4] ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[3] ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005 :
	       !SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033 :
	       !SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h57098 :
	       _theResult___fst_sfd__h100043 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007 =
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 ||
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 == 23'd0 ||
	     (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] ||
	      NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 &&
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 &&
	      x__h18493[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
	       3'd0,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 } ==
	     5'd0 ||
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 =
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	     !sV1_sfd__h1309[22] &&
	     sV2_exp__h1411 == 8'd255 &&
	     sV2_sfd__h1412 != 23'd0 &&
	     !sV2_sfd__h1412[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052 =
	     sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h1411 == 8'd0 &&
	     sV2_sfd__h1412 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 =
	     sV1_exp__h1308 < sV2_exp__h1411 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 =
	     sV1_exp__h1308 == sV2_exp__h1411 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067 =
	     sV1_sfd__h1309 < sV2_sfd__h1412 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 =
	     sV1_exp__h1308 <= sV2_exp__h1411 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072 =
	     sV1_sfd__h1309 <= sV2_sfd__h1412 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090 =
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	     !sV1_sfd__h1309[22] ||
	     sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412 != 23'd0 &&
	     !sV2_sfd__h1412[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090 ||
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22] ||
	     sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072) &&
	     !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146 =
	     sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0 &&
	     sV2_exp__h1411 == 8'd0 &&
	     sV2_sfd__h1412 == 23'd0 ||
	     NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 =
	     sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h1308 == 8'd255 &&
	     sV1_sfd__h1309 == 23'd0 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 =
	     sV1_exp__h1308 - 8'd127 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h16687 :
	       b__h16687 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h50701 == 2'b10) ?
		  IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[53] :
		  guard__h50701 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h50701 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85] &&
		  guard__h50701 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h51255 == 2'b10) ?
		  x__h51444[54] :
		  guard__h51255 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h51255 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h51444[85] &&
		  guard__h51255 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h52336 == 2'b10) ?
		  x__h52557[54] :
		  guard__h52336 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h52336 != 2'd0 ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h16620 == 2'b10) ?
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[24] :
		  guard__h16620 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h16620 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56] &&
		  guard__h16620 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h17174 == 2'b10) ?
		  x__h17363[25] :
		  guard__h17174 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h17174 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h17363[56] &&
		  guard__h17174 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h18272 == 2'b10) ?
		  x__h18493[25] :
		  guard__h18272 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h18272 != 2'd0 ;
  assign IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514 =
	     (sfd__h3789[31] || sfd__h3789[30] || sfd__h3789[29] ||
	      sfd__h3789[28] ||
	      sfd__h3789[27] ||
	      sfd__h3789[26] ||
	      sfd__h3789[25] ||
	      sfd__h3789[24] ||
	      sfd__h3789[23] ||
	      sfd__h3789[22] ||
	      sfd__h3789[21] ||
	      sfd__h3789[20] ||
	      sfd__h3789[19] ||
	      sfd__h3789[18] ||
	      sfd__h3789[17] ||
	      sfd__h3789[16] ||
	      sfd__h3789[15] ||
	      sfd__h3789[14] ||
	      sfd__h3789[13] ||
	      sfd__h3789[12] ||
	      sfd__h3789[11] ||
	      sfd__h3789[10] ||
	      sfd__h3789[9] ||
	      sfd__h3789[8] ||
	      sfd__h3789[7] ||
	      sfd__h3789[6] ||
	      sfd__h3789[5] ||
	      sfd__h3789[4] ||
	      sfd__h3789[3] ||
	      sfd__h3789[2] ||
	      sfd__h3789[1] ||
	      sfd__h3789[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 &&
	      _theResult___fst_exp__h9772 == 8'd255 &&
	      _theResult___fst_sfd__h9773 == 23'd0) ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517 =
	     (sfd__h3789[31] || sfd__h3789[30] || sfd__h3789[29] ||
	      sfd__h3789[28] ||
	      sfd__h3789[27] ||
	      sfd__h3789[26] ||
	      sfd__h3789[25] ||
	      sfd__h3789[24] ||
	      sfd__h3789[23] ||
	      sfd__h3789[22] ||
	      sfd__h3789[21] ||
	      sfd__h3789[20] ||
	      sfd__h3789[19] ||
	      sfd__h3789[18] ||
	      sfd__h3789[17] ||
	      sfd__h3789[16] ||
	      sfd__h3789[15] ||
	      sfd__h3789[14] ||
	      sfd__h3789[13] ||
	      sfd__h3789[12] ||
	      sfd__h3789[11] ||
	      sfd__h3789[10] ||
	      sfd__h3789[9] ||
	      sfd__h3789[8] ||
	      sfd__h3789[7] ||
	      sfd__h3789[6] ||
	      sfd__h3789[5] ||
	      sfd__h3789[4] ||
	      sfd__h3789[3] ||
	      sfd__h3789[2] ||
	      sfd__h3789[1] ||
	      sfd__h3789[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526 =
	     (sfd__h3789[31] || sfd__h3789[30] || sfd__h3789[29] ||
	      sfd__h3789[28] ||
	      sfd__h3789[27] ||
	      sfd__h3789[26] ||
	      sfd__h3789[25] ||
	      sfd__h3789[24] ||
	      sfd__h3789[23] ||
	      sfd__h3789[22] ||
	      sfd__h3789[21] ||
	      sfd__h3789[20] ||
	      sfd__h3789[19] ||
	      sfd__h3789[18] ||
	      sfd__h3789[17] ||
	      sfd__h3789[16] ||
	      sfd__h3789[15] ||
	      sfd__h3789[14] ||
	      sfd__h3789[13] ||
	      sfd__h3789[12] ||
	      sfd__h3789[11] ||
	      sfd__h3789[10] ||
	      sfd__h3789[9] ||
	      sfd__h3789[8] ||
	      sfd__h3789[7] ||
	      sfd__h3789[6] ||
	      sfd__h3789[5] ||
	      sfd__h3789[4] ||
	      sfd__h3789[3] ||
	      sfd__h3789[2] ||
	      sfd__h3789[1] ||
	      sfd__h3789[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523 ;
  assign IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711 =
	     requestR[191] ? -b__h50768 : b__h50768 ;
  assign IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883 =
	     requestR[191] ?
	       !requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 ||
	       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 &&
	       !requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875 :
	       requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 ||
	       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 &&
	       requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880 ;
  assign IF_sfd___34905_BIT_7_THEN_2_ELSE_0__q21 =
	     sfd___3__h14905[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34905_BIT_8_THEN_2_ELSE_0__q20 =
	     sfd___3__h14905[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3693_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h8693[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3693_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h8693[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38584_BIT_1_THEN_2_ELSE_0__q48 =
	     sfd___3__h48584[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38584_BIT_2_THEN_2_ELSE_0__q47 =
	     sfd___3__h48584[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38853_BIT_1_THEN_2_ELSE_0__q34 =
	     sfd___3__h38853[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38853_BIT_2_THEN_2_ELSE_0__q33 =
	     sfd___3__h38853[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin0728_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h90728[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin2875_BIT_33_THEN_2_ELSE_0__q61 =
	     sfdin__h72875[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin32098_BIT_4_THEN_2_ELSE_0__q98 =
	     sfdin__h132098[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd1518_BIT_33_THEN_2_ELSE_0__q63 =
	     _theResult___snd__h81518[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd22482_BIT_4_THEN_2_ELSE_0__q95 =
	     _theResult___snd__h122482[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd40881_BIT_4_THEN_2_ELSE_0__q101 =
	     _theResult___snd__h140881[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd9395_BIT_33_THEN_2_ELSE_0__q69 =
	     _theResult___snd__h99395[33] ? 2'd2 : 2'd0 ;
  assign IF_x1444_BIT_53_THEN_2_ELSE_0__q58 = x__h51444[53] ? 2'd2 : 2'd0 ;
  assign IF_x2557_BIT_53_THEN_2_ELSE_0__q59 = x__h52557[53] ? 2'd2 : 2'd0 ;
  assign IF_x7363_BIT_24_THEN_2_ELSE_0__q31 = x__h17363[24] ? 2'd2 : 2'd0 ;
  assign IF_x8493_BIT_24_THEN_2_ELSE_0__q32 = x__h18493[24] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 =
	     -{ {12{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868[7]}},
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 } ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 =
	     -{ {13{requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702[10]}},
		requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 } ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 +
	     24'd32 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 -
	     24'd2 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 -
	     24'd1 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[2] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[0] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[0]) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 =
	     (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] &&
	     (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 ||
	      guard__h18272 != 2'd0) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079 =
	     (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0 ||
	      sV2_exp__h1411 != 8'd0 ||
	      sV2_sfd__h1412 != 23'd0) &&
	     requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 =
	     (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	     (sV2_exp__h1411 != 8'd255 || sV2_sfd__h1412 == 23'd0) &&
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141 =
	     !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067) &&
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147 =
	     (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	     (sV2_exp__h1411 != 8'd255 || sV2_sfd__h1412 == 23'd0) &&
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167 =
	     (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	     (sV2_exp__h1411 != 8'd255 || sV2_sfd__h1412 == 23'd0) &&
	     (requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 =
	     !sV1_sfd__h1309[21] && !sV1_sfd__h1309[20] &&
	     !sV1_sfd__h1309[19] &&
	     !sV1_sfd__h1309[18] &&
	     !sV1_sfd__h1309[17] &&
	     !sV1_sfd__h1309[16] &&
	     !sV1_sfd__h1309[15] &&
	     !sV1_sfd__h1309[14] &&
	     !sV1_sfd__h1309[13] &&
	     !sV1_sfd__h1309[12] &&
	     !sV1_sfd__h1309[11] &&
	     !sV1_sfd__h1309[10] &&
	     !sV1_sfd__h1309[9] &&
	     !sV1_sfd__h1309[8] &&
	     !sV1_sfd__h1309[7] &&
	     !sV1_sfd__h1309[6] &&
	     !sV1_sfd__h1309[5] &&
	     !sV1_sfd__h1309[4] &&
	     !sV1_sfd__h1309[3] &&
	     !sV1_sfd__h1309[2] &&
	     !sV1_sfd__h1309[1] &&
	     !sV1_sfd__h1309[0] ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947 =
	     (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	       20'd1048545) ?
		_theResult_____2__h16622[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] ||
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 &&
		IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 &&
		x__h17363[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311 =
	     !sfd__h3789[31] && !sfd__h3789[30] && !sfd__h3789[29] &&
	     !sfd__h3789[28] &&
	     !sfd__h3789[27] &&
	     !sfd__h3789[26] &&
	     !sfd__h3789[25] &&
	     !sfd__h3789[24] &&
	     !sfd__h3789[23] &&
	     !sfd__h3789[22] &&
	     !sfd__h3789[21] &&
	     !sfd__h3789[20] &&
	     !sfd__h3789[19] &&
	     !sfd__h3789[18] &&
	     !sfd__h3789[17] &&
	     !sfd__h3789[16] &&
	     !sfd__h3789[15] &&
	     !sfd__h3789[14] &&
	     !sfd__h3789[13] &&
	     !sfd__h3789[12] &&
	     !sfd__h3789[11] &&
	     !sfd__h3789[10] &&
	     !sfd__h3789[9] &&
	     !sfd__h3789[8] &&
	     !sfd__h3789[7] &&
	     !sfd__h3789[6] &&
	     !sfd__h3789[5] &&
	     !sfd__h3789[4] &&
	     !sfd__h3789[3] &&
	     !sfd__h3789[2] &&
	     !sfd__h3789[1] &&
	     !sfd__h3789[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ;
  assign NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 &&
	      _theResult___fst_exp__h15979 == 8'd255 &&
	      _theResult___fst_sfd__h15980 == 23'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	       24'd16777185) ?
		_theResult_____2__h50703[32:31] != 2'b11 :
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] ||
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 &&
		IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 &&
		x__h51444[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] &&
	     (!NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 ||
	      guard__h52336 != 2'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883 ||
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931 =
	     !requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      !requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880) &&
	     requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875) ;
  assign NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141 :
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142) ;
  assign NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 ;
  assign NOT_verbosity_ULE_1_4___d25 = verbosity > 4'd1 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 =
	     { {4{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868[7]}},
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 } ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 +
	     12'd1023 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 =
	     { requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702[10],
	       requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 } ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 +
	     12'd127 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953 =
	     { 3'd0,
	       _theResult___fst_exp__h72881 == 8'd0 &&
	       (sfdin__h72875[56:34] == 23'd0 || guard__h64784 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h73508 == 8'd255 &&
	       _theResult___fst_sfd__h73509 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h72881 != 8'd255 &&
	       guard__h64784 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777 =
	     { 3'd0,
	       _theResult___fst_exp__h132104 == 11'd0 &&
	       (sfdin__h132098[56:5] == 52'd0 || guard__h123878 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h132934 == 11'd2047 &&
	       _theResult___fst_sfd__h132935 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h132104 != 11'd2047 &&
	       guard__h123878 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982 =
	     { 3'd0,
	       _theResult___fst_exp__h90734 == 8'd0 &&
	       (sfdin__h90728[56:34] == 23'd0 || guard__h82508 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h91361 == 8'd255 &&
	       _theResult___fst_sfd__h91362 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h90734 != 8'd255 &&
	       guard__h82508 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760 =
	     { 3'd0,
	       _theResult___fst_exp__h122531 == 11'd0 &&
	       guard__h114570 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h123287 == 11'd2047 &&
	       _theResult___fst_sfd__h123288 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h122531 != 11'd2047 &&
	       guard__h114570 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965 =
	     { 3'd0,
	       _theResult___fst_exp__h81567 == 8'd0 && guard__h73519 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h82120 == 8'd255 &&
	       _theResult___fst_sfd__h82121 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h81567 != 8'd255 &&
	       guard__h73519 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248 =
	     b__h16687 >>
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ;
  assign _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413 =
	     sfd__h57144 >>
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[4] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[3] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[1] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 =
	     12'd3074 -
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h1309[22] ?
		 5'd0 :
		 (sV1_sfd__h1309[21] ?
		    5'd1 :
		    (sV1_sfd__h1309[20] ?
		       5'd2 :
		       (sV1_sfd__h1309[19] ?
			  5'd3 :
			  (sV1_sfd__h1309[18] ?
			     5'd4 :
			     (sV1_sfd__h1309[17] ?
				5'd5 :
				(sV1_sfd__h1309[16] ?
				   5'd6 :
				   (sV1_sfd__h1309[15] ?
				      5'd7 :
				      (sV1_sfd__h1309[14] ?
					 5'd8 :
					 (sV1_sfd__h1309[13] ?
					    5'd9 :
					    (sV1_sfd__h1309[12] ?
					       5'd10 :
					       (sV1_sfd__h1309[11] ?
						  5'd11 :
						  (sV1_sfd__h1309[10] ?
						     5'd12 :
						     (sV1_sfd__h1309[9] ?
							5'd13 :
							(sV1_sfd__h1309[8] ?
							   5'd14 :
							   (sV1_sfd__h1309[7] ?
							      5'd15 :
							      (sV1_sfd__h1309[6] ?
								 5'd16 :
								 (sV1_sfd__h1309[5] ?
								    5'd17 :
								    (sV1_sfd__h1309[4] ?
								       5'd18 :
								       (sV1_sfd__h1309[3] ?
									  5'd19 :
									  (sV1_sfd__h1309[2] ?
									     5'd20 :
									     (sV1_sfd__h1309[1] ?
										5'd21 :
										(sV1_sfd__h1309[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 =
	     12'd3970 -
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ;
  assign _theResult_____2__h16622 =
	     IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894 ?
	       out1___1__h17114 :
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56:24] ;
  assign _theResult_____2__h50703 =
	     IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728 ?
	       out1___1__h51195 :
	       IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85:53] ;
  assign _theResult____h123868 =
	     ((_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ^
	       12'h800) <
	      12'd2105) ?
	       result__h124481 :
	       ((value__h16689 == 25'd0) ? b__h16687 : 57'd1) ;
  assign _theResult____h64774 =
	     (value__h50770 == 54'd0) ? sfd__h57144 : 57'd1 ;
  assign _theResult____h82498 =
	     ((_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ^
	       12'h800) <
	      12'd2105) ?
	       result__h83111 :
	       _theResult____h64774 ;
  assign _theResult___exp__h123186 =
	     sfd__h122549[53] ?
	       ((_theResult___fst_exp__h122531 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141751) :
	       ((_theResult___fst_exp__h122531 == 11'd0 &&
		 sfd__h122549[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h122531) ;
  assign _theResult___exp__h132833 =
	     sfd__h132196[53] ?
	       ((_theResult___fst_exp__h132104 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141781) :
	       ((_theResult___fst_exp__h132104 == 11'd0 &&
		 sfd__h132196[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h132104) ;
  assign _theResult___exp__h141615 =
	     sfd__h140954[53] ?
	       ((_theResult___fst_exp__h140935 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141805) :
	       ((_theResult___fst_exp__h140935 == 11'd0 &&
		 sfd__h140954[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h140935) ;
  assign _theResult___exp__h15328 =
	     (sfd__h14932[24] || sfd__h14932[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h15880 =
	     sfd__h15471[24] ?
	       ((x__h15456[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h16018) :
	       ((x__h15456[7:0] == 8'd0 && sfd__h15471[24:23] == 2'b01) ?
		  8'd1 :
		  x__h15456[7:0]) ;
  assign _theResult___exp__h39479 =
	     (sfd__h38880[53] || sfd__h38880[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h40235 =
	     sfd__h39623[53] ?
	       ((x__h39608[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h40378) :
	       ((x__h39608[10:0] == 11'd0 && sfd__h39623[53:52] == 2'b01) ?
		  11'd1 :
		  x__h39608[10:0]) ;
  assign _theResult___exp__h49210 =
	     (sfd__h48611[53] || sfd__h48611[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h49965 =
	     sfd__h49353[53] ?
	       ((x__h49338[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h50103) :
	       ((x__h49338[10:0] == 11'd0 && sfd__h49353[53:52] == 2'b01) ?
		  11'd1 :
		  x__h49338[10:0]) ;
  assign _theResult___exp__h73407 =
	     sfd__h72973[24] ?
	       ((_theResult___fst_exp__h72881 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100058) :
	       ((_theResult___fst_exp__h72881 == 8'd0 &&
		 sfd__h72973[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h72881) ;
  assign _theResult___exp__h82019 =
	     sfd__h81585[24] ?
	       ((_theResult___fst_exp__h81567 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100082) :
	       ((_theResult___fst_exp__h81567 == 8'd0 &&
		 sfd__h81585[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h81567) ;
  assign _theResult___exp__h9119 =
	     (sfd__h8720[24] || sfd__h8720[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h91260 =
	     sfd__h90826[24] ?
	       ((_theResult___fst_exp__h90734 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100112) :
	       ((_theResult___fst_exp__h90734 == 8'd0 &&
		 sfd__h90826[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h90734) ;
  assign _theResult___exp__h9672 =
	     sfd__h9263[24] ?
	       ((x__h9248[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h9815) :
	       ((x__h9248[7:0] == 8'd0 && sfd__h9263[24:23] == 2'b01) ?
		  8'd1 :
		  x__h9248[7:0]) ;
  assign _theResult___exp__h99926 =
	     sfd__h99468[24] ?
	       ((_theResult___fst_exp__h99449 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100136) :
	       ((_theResult___fst_exp__h99449 == 8'd0 &&
		 sfd__h99468[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h99449) ;
  assign _theResult___fst_exp__h100024 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q77 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 ;
  assign _theResult___fst_exp__h100027 =
	     (_theResult___fst_exp__h99449 == 8'd255) ?
	       _theResult___fst_exp__h99449 :
	       _theResult___fst_exp__h100024 ;
  assign _theResult___fst_exp__h100036 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  _theResult___snd_fst_exp__h82123 :
		  _theResult___fst_exp__h64756) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  _theResult___snd_fst_exp__h100030 :
		  _theResult___fst_exp__h64756) ;
  assign _theResult___fst_exp__h100039 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h100036 ;
  assign _theResult___fst_exp__h107458 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h122522 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ;
  assign _theResult___fst_exp__h122528 =
	     (sV1_exp__h1308 == 8'd0 && !sV1_sfd__h1309[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172) ?
	       11'd0 :
	       _theResult___fst_exp__h122522 ;
  assign _theResult___fst_exp__h122531 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _theResult___fst_exp__h122528 :
	       11'd897 ;
  assign _theResult___fst_exp__h123284 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q103 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 ;
  assign _theResult___fst_exp__h123287 =
	     (_theResult___fst_exp__h122531 == 11'd2047) ?
	       _theResult___fst_exp__h122531 :
	       _theResult___fst_exp__h123284 ;
  assign _theResult___fst_exp__h132104 =
	     _theResult____h123868[56] ?
	       11'd2 :
	       _theResult___fst_exp__h132178 ;
  assign _theResult___fst_exp__h132169 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 } ;
  assign _theResult___fst_exp__h132175 =
	     (!_theResult____h123868[56] && !_theResult____h123868[55] &&
	      !_theResult____h123868[54] &&
	      !_theResult____h123868[53] &&
	      !_theResult____h123868[52] &&
	      !_theResult____h123868[51] &&
	      !_theResult____h123868[50] &&
	      !_theResult____h123868[49] &&
	      !_theResult____h123868[48] &&
	      !_theResult____h123868[47] &&
	      !_theResult____h123868[46] &&
	      !_theResult____h123868[45] &&
	      !_theResult____h123868[44] &&
	      !_theResult____h123868[43] &&
	      !_theResult____h123868[42] &&
	      !_theResult____h123868[41] &&
	      !_theResult____h123868[40] &&
	      !_theResult____h123868[39] &&
	      !_theResult____h123868[38] &&
	      !_theResult____h123868[37] &&
	      !_theResult____h123868[36] &&
	      !_theResult____h123868[35] &&
	      !_theResult____h123868[34] &&
	      !_theResult____h123868[33] &&
	      !_theResult____h123868[32] &&
	      !_theResult____h123868[31] &&
	      !_theResult____h123868[30] &&
	      !_theResult____h123868[29] &&
	      !_theResult____h123868[28] &&
	      !_theResult____h123868[27] &&
	      !_theResult____h123868[26] &&
	      !_theResult____h123868[25] &&
	      !_theResult____h123868[24] &&
	      !_theResult____h123868[23] &&
	      !_theResult____h123868[22] &&
	      !_theResult____h123868[21] &&
	      !_theResult____h123868[20] &&
	      !_theResult____h123868[19] &&
	      !_theResult____h123868[18] &&
	      !_theResult____h123868[17] &&
	      !_theResult____h123868[16] &&
	      !_theResult____h123868[15] &&
	      !_theResult____h123868[14] &&
	      !_theResult____h123868[13] &&
	      !_theResult____h123868[12] &&
	      !_theResult____h123868[11] &&
	      !_theResult____h123868[10] &&
	      !_theResult____h123868[9] &&
	      !_theResult____h123868[8] &&
	      !_theResult____h123868[7] &&
	      !_theResult____h123868[6] &&
	      !_theResult____h123868[5] &&
	      !_theResult____h123868[4] &&
	      !_theResult____h123868[3] &&
	      !_theResult____h123868[2] &&
	      !_theResult____h123868[1] &&
	      !_theResult____h123868[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492) ?
	       11'd0 :
	       _theResult___fst_exp__h132169 ;
  assign _theResult___fst_exp__h132178 =
	     (!_theResult____h123868[56] && _theResult____h123868[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h132175 ;
  assign _theResult___fst_exp__h132931 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q105 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 ;
  assign _theResult___fst_exp__h132934 =
	     (_theResult___fst_exp__h132104 == 11'd2047) ?
	       _theResult___fst_exp__h132104 :
	       _theResult___fst_exp__h132931 ;
  assign _theResult___fst_exp__h140887 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ;
  assign _theResult___fst_exp__h140926 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ;
  assign _theResult___fst_exp__h140932 =
	     (sV1_exp__h1308 == 8'd0 && !sV1_sfd__h1309[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565) ?
	       11'd0 :
	       _theResult___fst_exp__h140926 ;
  assign _theResult___fst_exp__h140935 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _theResult___fst_exp__h140932 :
	       _theResult___fst_exp__h140887 ;
  assign _theResult___fst_exp__h141713 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q107 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 ;
  assign _theResult___fst_exp__h141716 =
	     (_theResult___fst_exp__h140935 == 11'd2047) ?
	       _theResult___fst_exp__h140935 :
	       _theResult___fst_exp__h141713 ;
  assign _theResult___fst_exp__h141725 =
	     (sV1_exp__h1308 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ?
		  _theResult___snd_fst_exp__h123290 :
		  _theResult___fst_exp__h107458) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
		  _theResult___snd_fst_exp__h141719 :
		  _theResult___fst_exp__h107458) ;
  assign _theResult___fst_exp__h141728 =
	     (sV1_exp__h1308 == 8'd0 && sV1_sfd__h1309 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h141725 ;
  assign _theResult___fst_exp__h15424 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4915_0b0_0_0b1_0_0b10_out_exp5331_0b_ETC__q22 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard4915_ETC__q24 ;
  assign _theResult___fst_exp__h15976 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_x5456_ETC__q26 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 ;
  assign _theResult___fst_exp__h15979 =
	     (x__h15456[7:0] == 8'd255) ?
	       x__h15456[7:0] :
	       _theResult___fst_exp__h15976 ;
  assign _theResult___fst_exp__h39576 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8863_0b0_0_0b1_0_0b10_out_exp9482_0b_ETC__q44 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 ;
  assign _theResult___fst_exp__h40332 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_x960_ETC__q40 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 ;
  assign _theResult___fst_exp__h40335 =
	     (x__h39608[10:0] == 11'd2047) ?
	       x__h39608[10:0] :
	       _theResult___fst_exp__h40332 ;
  assign _theResult___fst_exp__h49306 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8594_0b0_0_0b1_0_0b10_out_exp9213_0b_ETC__q49 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard8594_ETC__q51 ;
  assign _theResult___fst_exp__h50061 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_x933_ETC__q53 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 ;
  assign _theResult___fst_exp__h50064 =
	     (x__h49338[10:0] == 11'd2047) ?
	       x__h49338[10:0] :
	       _theResult___fst_exp__h50061 ;
  assign _theResult___fst_exp__h64756 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h72881 =
	     _theResult____h64774[56] ? 8'd2 : _theResult___fst_exp__h72955 ;
  assign _theResult___fst_exp__h72946 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 } ;
  assign _theResult___fst_exp__h72952 =
	     (!_theResult____h64774[56] && !_theResult____h64774[55] &&
	      !_theResult____h64774[54] &&
	      !_theResult____h64774[53] &&
	      !_theResult____h64774[52] &&
	      !_theResult____h64774[51] &&
	      !_theResult____h64774[50] &&
	      !_theResult____h64774[49] &&
	      !_theResult____h64774[48] &&
	      !_theResult____h64774[47] &&
	      !_theResult____h64774[46] &&
	      !_theResult____h64774[45] &&
	      !_theResult____h64774[44] &&
	      !_theResult____h64774[43] &&
	      !_theResult____h64774[42] &&
	      !_theResult____h64774[41] &&
	      !_theResult____h64774[40] &&
	      !_theResult____h64774[39] &&
	      !_theResult____h64774[38] &&
	      !_theResult____h64774[37] &&
	      !_theResult____h64774[36] &&
	      !_theResult____h64774[35] &&
	      !_theResult____h64774[34] &&
	      !_theResult____h64774[33] &&
	      !_theResult____h64774[32] &&
	      !_theResult____h64774[31] &&
	      !_theResult____h64774[30] &&
	      !_theResult____h64774[29] &&
	      !_theResult____h64774[28] &&
	      !_theResult____h64774[27] &&
	      !_theResult____h64774[26] &&
	      !_theResult____h64774[25] &&
	      !_theResult____h64774[24] &&
	      !_theResult____h64774[23] &&
	      !_theResult____h64774[22] &&
	      !_theResult____h64774[21] &&
	      !_theResult____h64774[20] &&
	      !_theResult____h64774[19] &&
	      !_theResult____h64774[18] &&
	      !_theResult____h64774[17] &&
	      !_theResult____h64774[16] &&
	      !_theResult____h64774[15] &&
	      !_theResult____h64774[14] &&
	      !_theResult____h64774[13] &&
	      !_theResult____h64774[12] &&
	      !_theResult____h64774[11] &&
	      !_theResult____h64774[10] &&
	      !_theResult____h64774[9] &&
	      !_theResult____h64774[8] &&
	      !_theResult____h64774[7] &&
	      !_theResult____h64774[6] &&
	      !_theResult____h64774[5] &&
	      !_theResult____h64774[4] &&
	      !_theResult____h64774[3] &&
	      !_theResult____h64774[2] &&
	      !_theResult____h64774[1] &&
	      !_theResult____h64774[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171) ?
	       8'd0 :
	       _theResult___fst_exp__h72946 ;
  assign _theResult___fst_exp__h72955 =
	     (!_theResult____h64774[56] && _theResult____h64774[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h72952 ;
  assign _theResult___fst_exp__h73505 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q71 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 ;
  assign _theResult___fst_exp__h73508 =
	     (_theResult___fst_exp__h72881 == 8'd255) ?
	       _theResult___fst_exp__h72881 :
	       _theResult___fst_exp__h73505 ;
  assign _theResult___fst_exp__h81558 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ;
  assign _theResult___fst_exp__h81564 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333) ?
	       8'd0 :
	       _theResult___fst_exp__h81558 ;
  assign _theResult___fst_exp__h81567 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h81564 :
	       8'd129 ;
  assign _theResult___fst_exp__h82117 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q75 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 ;
  assign _theResult___fst_exp__h82120 =
	     (_theResult___fst_exp__h81567 == 8'd255) ?
	       _theResult___fst_exp__h81567 :
	       _theResult___fst_exp__h82117 ;
  assign _theResult___fst_exp__h90734 =
	     _theResult____h82498[56] ? 8'd2 : _theResult___fst_exp__h90808 ;
  assign _theResult___fst_exp__h90799 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 } ;
  assign _theResult___fst_exp__h90805 =
	     (!_theResult____h82498[56] && !_theResult____h82498[55] &&
	      !_theResult____h82498[54] &&
	      !_theResult____h82498[53] &&
	      !_theResult____h82498[52] &&
	      !_theResult____h82498[51] &&
	      !_theResult____h82498[50] &&
	      !_theResult____h82498[49] &&
	      !_theResult____h82498[48] &&
	      !_theResult____h82498[47] &&
	      !_theResult____h82498[46] &&
	      !_theResult____h82498[45] &&
	      !_theResult____h82498[44] &&
	      !_theResult____h82498[43] &&
	      !_theResult____h82498[42] &&
	      !_theResult____h82498[41] &&
	      !_theResult____h82498[40] &&
	      !_theResult____h82498[39] &&
	      !_theResult____h82498[38] &&
	      !_theResult____h82498[37] &&
	      !_theResult____h82498[36] &&
	      !_theResult____h82498[35] &&
	      !_theResult____h82498[34] &&
	      !_theResult____h82498[33] &&
	      !_theResult____h82498[32] &&
	      !_theResult____h82498[31] &&
	      !_theResult____h82498[30] &&
	      !_theResult____h82498[29] &&
	      !_theResult____h82498[28] &&
	      !_theResult____h82498[27] &&
	      !_theResult____h82498[26] &&
	      !_theResult____h82498[25] &&
	      !_theResult____h82498[24] &&
	      !_theResult____h82498[23] &&
	      !_theResult____h82498[22] &&
	      !_theResult____h82498[21] &&
	      !_theResult____h82498[20] &&
	      !_theResult____h82498[19] &&
	      !_theResult____h82498[18] &&
	      !_theResult____h82498[17] &&
	      !_theResult____h82498[16] &&
	      !_theResult____h82498[15] &&
	      !_theResult____h82498[14] &&
	      !_theResult____h82498[13] &&
	      !_theResult____h82498[12] &&
	      !_theResult____h82498[11] &&
	      !_theResult____h82498[10] &&
	      !_theResult____h82498[9] &&
	      !_theResult____h82498[8] &&
	      !_theResult____h82498[7] &&
	      !_theResult____h82498[6] &&
	      !_theResult____h82498[5] &&
	      !_theResult____h82498[4] &&
	      !_theResult____h82498[3] &&
	      !_theResult____h82498[2] &&
	      !_theResult____h82498[1] &&
	      !_theResult____h82498[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655) ?
	       8'd0 :
	       _theResult___fst_exp__h90799 ;
  assign _theResult___fst_exp__h90808 =
	     (!_theResult____h82498[56] && _theResult____h82498[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h90805 ;
  assign _theResult___fst_exp__h91358 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q73 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 ;
  assign _theResult___fst_exp__h91361 =
	     (_theResult___fst_exp__h90734 == 8'd255) ?
	       _theResult___fst_exp__h90734 :
	       _theResult___fst_exp__h91358 ;
  assign _theResult___fst_exp__h9216 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard703_0b0_0_0b1_0_0b10_out_exp122_0b11_ETC__q9 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 ;
  assign _theResult___fst_exp__h9769 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_x248_BI_ETC__q15 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 ;
  assign _theResult___fst_exp__h9772 =
	     (x__h9248[7:0] == 8'd255) ?
	       x__h9248[7:0] :
	       _theResult___fst_exp__h9769 ;
  assign _theResult___fst_exp__h99401 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h99440 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ;
  assign _theResult___fst_exp__h99446 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728) ?
	       8'd0 :
	       _theResult___fst_exp__h99440 ;
  assign _theResult___fst_exp__h99449 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h99446 :
	       _theResult___fst_exp__h99401 ;
  assign _theResult___fst_sfd__h100025 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q85 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 ;
  assign _theResult___fst_sfd__h100028 =
	     (_theResult___fst_exp__h99449 == 8'd255) ?
	       _theResult___snd__h99395[56:34] :
	       _theResult___fst_sfd__h100025 ;
  assign _theResult___fst_sfd__h100037 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  _theResult___snd_fst_sfd__h82124 :
		  _theResult___fst_sfd__h64757) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  _theResult___snd_fst_sfd__h100031 :
		  _theResult___fst_sfd__h64757) ;
  assign _theResult___fst_sfd__h100043 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h100037 ;
  assign _theResult___fst_sfd__h101977 = { 1'd1, sV1_sfd__h1309[21:0] } ;
  assign _theResult___fst_sfd__h107459 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h123285 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q115 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 ;
  assign _theResult___fst_sfd__h123288 =
	     (_theResult___fst_exp__h122531 == 11'd2047) ?
	       _theResult___snd__h122482[56:5] :
	       _theResult___fst_sfd__h123285 ;
  assign _theResult___fst_sfd__h132932 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q119 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 ;
  assign _theResult___fst_sfd__h132935 =
	     (_theResult___fst_exp__h132104 == 11'd2047) ?
	       sfdin__h132098[56:5] :
	       _theResult___fst_sfd__h132932 ;
  assign _theResult___fst_sfd__h141714 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q117 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 ;
  assign _theResult___fst_sfd__h141717 =
	     (_theResult___fst_exp__h140935 == 11'd2047) ?
	       _theResult___snd__h140881[56:5] :
	       _theResult___fst_sfd__h141714 ;
  assign _theResult___fst_sfd__h141726 =
	     (sV1_exp__h1308 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ?
		  _theResult___snd_fst_sfd__h123291 :
		  _theResult___fst_sfd__h107459) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
		  _theResult___snd_fst_sfd__h141720 :
		  _theResult___fst_sfd__h107459) ;
  assign _theResult___fst_sfd__h141732 =
	     ((sV1_exp__h1308 == 8'd255 || sV1_exp__h1308 == 8'd0) &&
	      sV1_sfd__h1309 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h141726 ;
  assign _theResult___fst_sfd__h15425 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q30 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 ;
  assign _theResult___fst_sfd__h15977 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q28 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 ;
  assign _theResult___fst_sfd__h15980 =
	     (x__h15456[7:0] == 8'd255) ?
	       sfd___3__h14905[30:8] :
	       _theResult___fst_sfd__h15977 ;
  assign _theResult___fst_sfd__h39577 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q46 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 ;
  assign _theResult___fst_sfd__h40333 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q42 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 ;
  assign _theResult___fst_sfd__h40336 =
	     (x__h39608[10:0] == 11'd2047) ?
	       sfd___3__h38853[53:2] :
	       _theResult___fst_sfd__h40333 ;
  assign _theResult___fst_sfd__h49307 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q57 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 ;
  assign _theResult___fst_sfd__h50062 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q55 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 ;
  assign _theResult___fst_sfd__h50065 =
	     (x__h49338[10:0] == 11'd2047) ?
	       sfd___3__h48584[53:2] :
	       _theResult___fst_sfd__h50062 ;
  assign _theResult___fst_sfd__h53440 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h64757 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h73506 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q79 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 ;
  assign _theResult___fst_sfd__h73509 =
	     (_theResult___fst_exp__h72881 == 8'd255) ?
	       sfdin__h72875[56:34] :
	       _theResult___fst_sfd__h73506 ;
  assign _theResult___fst_sfd__h82118 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q81 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 ;
  assign _theResult___fst_sfd__h82121 =
	     (_theResult___fst_exp__h81567 == 8'd255) ?
	       _theResult___snd__h81518[56:34] :
	       _theResult___fst_sfd__h82118 ;
  assign _theResult___fst_sfd__h91359 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q83 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 ;
  assign _theResult___fst_sfd__h91362 =
	     (_theResult___fst_exp__h90734 == 8'd255) ?
	       sfdin__h90728[56:34] :
	       _theResult___fst_sfd__h91359 ;
  assign _theResult___fst_sfd__h9217 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q17 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 ;
  assign _theResult___fst_sfd__h9770 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q19 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 ;
  assign _theResult___fst_sfd__h9773 =
	     (x__h9248[7:0] == 8'd255) ?
	       sfd___3__h8693[30:8] :
	       _theResult___fst_sfd__h9770 ;
  assign _theResult___sfd__h123187 =
	     sfd__h122549[53] ?
	       ((_theResult___fst_exp__h122531 == 11'd2046) ?
		  52'd0 :
		  sfd__h122549[52:1]) :
	       sfd__h122549[51:0] ;
  assign _theResult___sfd__h132834 =
	     sfd__h132196[53] ?
	       ((_theResult___fst_exp__h132104 == 11'd2046) ?
		  52'd0 :
		  sfd__h132196[52:1]) :
	       sfd__h132196[51:0] ;
  assign _theResult___sfd__h141616 =
	     sfd__h140954[53] ?
	       ((_theResult___fst_exp__h140935 == 11'd2046) ?
		  52'd0 :
		  sfd__h140954[52:1]) :
	       sfd__h140954[51:0] ;
  assign _theResult___sfd__h15329 =
	     sfd__h14932[24] ? sfd__h14932[23:1] : sfd__h14932[22:0] ;
  assign _theResult___sfd__h15881 =
	     sfd__h15471[24] ?
	       ((x__h15456[7:0] == 8'd254) ? 23'd0 : sfd__h15471[23:1]) :
	       sfd__h15471[22:0] ;
  assign _theResult___sfd__h39480 =
	     sfd__h38880[53] ? sfd__h38880[52:1] : sfd__h38880[51:0] ;
  assign _theResult___sfd__h40236 =
	     sfd__h39623[53] ?
	       ((x__h39608[10:0] == 11'd2046) ? 52'd0 : sfd__h39623[52:1]) :
	       sfd__h39623[51:0] ;
  assign _theResult___sfd__h49211 =
	     sfd__h48611[53] ? sfd__h48611[52:1] : sfd__h48611[51:0] ;
  assign _theResult___sfd__h49966 =
	     sfd__h49353[53] ?
	       ((x__h49338[10:0] == 11'd2046) ? 52'd0 : sfd__h49353[52:1]) :
	       sfd__h49353[51:0] ;
  assign _theResult___sfd__h73408 =
	     sfd__h72973[24] ?
	       ((_theResult___fst_exp__h72881 == 8'd254) ?
		  23'd0 :
		  sfd__h72973[23:1]) :
	       sfd__h72973[22:0] ;
  assign _theResult___sfd__h82020 =
	     sfd__h81585[24] ?
	       ((_theResult___fst_exp__h81567 == 8'd254) ?
		  23'd0 :
		  sfd__h81585[23:1]) :
	       sfd__h81585[22:0] ;
  assign _theResult___sfd__h9120 =
	     sfd__h8720[24] ? sfd__h8720[23:1] : sfd__h8720[22:0] ;
  assign _theResult___sfd__h91261 =
	     sfd__h90826[24] ?
	       ((_theResult___fst_exp__h90734 == 8'd254) ?
		  23'd0 :
		  sfd__h90826[23:1]) :
	       sfd__h90826[22:0] ;
  assign _theResult___sfd__h9673 =
	     sfd__h9263[24] ?
	       ((x__h9248[7:0] == 8'd254) ? 23'd0 : sfd__h9263[23:1]) :
	       sfd__h9263[22:0] ;
  assign _theResult___sfd__h99927 =
	     sfd__h99468[24] ?
	       ((_theResult___fst_exp__h99449 == 8'd254) ?
		  23'd0 :
		  sfd__h99468[23:1]) :
	       sfd__h99468[22:0] ;
  assign _theResult___snd__h122482 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _theResult___snd__h122491 :
	       _theResult___snd__h122484 ;
  assign _theResult___snd__h122484 = { sV1_sfd__h1309, 34'd0 } ;
  assign _theResult___snd__h122491 =
	     (sV1_exp__h1308 == 8'd0 && !sV1_sfd__h1309[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143) ?
	       b__h16687 :
	       _theResult___snd__h122497 ;
  assign _theResult___snd__h122497 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94[54:0],
	       2'd0 } ;
  assign _theResult___snd__h122520 =
	     b__h16687 <<
	     IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 ;
  assign _theResult___snd__h132115 = { _theResult____h123868[55:0], 1'd0 } ;
  assign _theResult___snd__h132126 =
	     (!_theResult____h123868[56] && _theResult____h123868[55]) ?
	       _theResult___snd__h132128 :
	       _theResult___snd__h132138 ;
  assign _theResult___snd__h132128 = { _theResult____h123868[54:0], 2'd0 } ;
  assign _theResult___snd__h132138 =
	     (!_theResult____h123868[56] && !_theResult____h123868[55] &&
	      !_theResult____h123868[54] &&
	      !_theResult____h123868[53] &&
	      !_theResult____h123868[52] &&
	      !_theResult____h123868[51] &&
	      !_theResult____h123868[50] &&
	      !_theResult____h123868[49] &&
	      !_theResult____h123868[48] &&
	      !_theResult____h123868[47] &&
	      !_theResult____h123868[46] &&
	      !_theResult____h123868[45] &&
	      !_theResult____h123868[44] &&
	      !_theResult____h123868[43] &&
	      !_theResult____h123868[42] &&
	      !_theResult____h123868[41] &&
	      !_theResult____h123868[40] &&
	      !_theResult____h123868[39] &&
	      !_theResult____h123868[38] &&
	      !_theResult____h123868[37] &&
	      !_theResult____h123868[36] &&
	      !_theResult____h123868[35] &&
	      !_theResult____h123868[34] &&
	      !_theResult____h123868[33] &&
	      !_theResult____h123868[32] &&
	      !_theResult____h123868[31] &&
	      !_theResult____h123868[30] &&
	      !_theResult____h123868[29] &&
	      !_theResult____h123868[28] &&
	      !_theResult____h123868[27] &&
	      !_theResult____h123868[26] &&
	      !_theResult____h123868[25] &&
	      !_theResult____h123868[24] &&
	      !_theResult____h123868[23] &&
	      !_theResult____h123868[22] &&
	      !_theResult____h123868[21] &&
	      !_theResult____h123868[20] &&
	      !_theResult____h123868[19] &&
	      !_theResult____h123868[18] &&
	      !_theResult____h123868[17] &&
	      !_theResult____h123868[16] &&
	      !_theResult____h123868[15] &&
	      !_theResult____h123868[14] &&
	      !_theResult____h123868[13] &&
	      !_theResult____h123868[12] &&
	      !_theResult____h123868[11] &&
	      !_theResult____h123868[10] &&
	      !_theResult____h123868[9] &&
	      !_theResult____h123868[8] &&
	      !_theResult____h123868[7] &&
	      !_theResult____h123868[6] &&
	      !_theResult____h123868[5] &&
	      !_theResult____h123868[4] &&
	      !_theResult____h123868[3] &&
	      !_theResult____h123868[2] &&
	      !_theResult____h123868[1] &&
	      !_theResult____h123868[0]) ?
	       _theResult____h123868 :
	       _theResult___snd__h132144 ;
  assign _theResult___snd__h132144 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h132167 =
	     _theResult____h123868 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 ;
  assign _theResult___snd__h140881 =
	     (sV1_exp__h1308 == 8'd0) ?
	       _theResult___snd__h140895 :
	       _theResult___snd__h122484 ;
  assign _theResult___snd__h140895 =
	     (sV1_exp__h1308 == 8'd0 && !sV1_sfd__h1309[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143) ?
	       b__h16687 :
	       _theResult___snd__h140901 ;
  assign _theResult___snd__h140901 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h140919 =
	     b__h16687 <<
	     IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 ;
  assign _theResult___snd__h72892 = { _theResult____h64774[55:0], 1'd0 } ;
  assign _theResult___snd__h72903 =
	     (!_theResult____h64774[56] && _theResult____h64774[55]) ?
	       _theResult___snd__h72905 :
	       _theResult___snd__h72915 ;
  assign _theResult___snd__h72905 = { _theResult____h64774[54:0], 2'd0 } ;
  assign _theResult___snd__h72915 =
	     (!_theResult____h64774[56] && !_theResult____h64774[55] &&
	      !_theResult____h64774[54] &&
	      !_theResult____h64774[53] &&
	      !_theResult____h64774[52] &&
	      !_theResult____h64774[51] &&
	      !_theResult____h64774[50] &&
	      !_theResult____h64774[49] &&
	      !_theResult____h64774[48] &&
	      !_theResult____h64774[47] &&
	      !_theResult____h64774[46] &&
	      !_theResult____h64774[45] &&
	      !_theResult____h64774[44] &&
	      !_theResult____h64774[43] &&
	      !_theResult____h64774[42] &&
	      !_theResult____h64774[41] &&
	      !_theResult____h64774[40] &&
	      !_theResult____h64774[39] &&
	      !_theResult____h64774[38] &&
	      !_theResult____h64774[37] &&
	      !_theResult____h64774[36] &&
	      !_theResult____h64774[35] &&
	      !_theResult____h64774[34] &&
	      !_theResult____h64774[33] &&
	      !_theResult____h64774[32] &&
	      !_theResult____h64774[31] &&
	      !_theResult____h64774[30] &&
	      !_theResult____h64774[29] &&
	      !_theResult____h64774[28] &&
	      !_theResult____h64774[27] &&
	      !_theResult____h64774[26] &&
	      !_theResult____h64774[25] &&
	      !_theResult____h64774[24] &&
	      !_theResult____h64774[23] &&
	      !_theResult____h64774[22] &&
	      !_theResult____h64774[21] &&
	      !_theResult____h64774[20] &&
	      !_theResult____h64774[19] &&
	      !_theResult____h64774[18] &&
	      !_theResult____h64774[17] &&
	      !_theResult____h64774[16] &&
	      !_theResult____h64774[15] &&
	      !_theResult____h64774[14] &&
	      !_theResult____h64774[13] &&
	      !_theResult____h64774[12] &&
	      !_theResult____h64774[11] &&
	      !_theResult____h64774[10] &&
	      !_theResult____h64774[9] &&
	      !_theResult____h64774[8] &&
	      !_theResult____h64774[7] &&
	      !_theResult____h64774[6] &&
	      !_theResult____h64774[5] &&
	      !_theResult____h64774[4] &&
	      !_theResult____h64774[3] &&
	      !_theResult____h64774[2] &&
	      !_theResult____h64774[1] &&
	      !_theResult____h64774[0]) ?
	       _theResult____h64774 :
	       _theResult___snd__h72921 ;
  assign _theResult___snd__h72921 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60[54:0],
	       2'd0 } ;
  assign _theResult___snd__h72944 =
	     _theResult____h64774 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 ;
  assign _theResult___snd__h81518 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h81527 :
	       _theResult___snd__h81520 ;
  assign _theResult___snd__h81520 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h81527 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276) ?
	       sfd__h57144 :
	       _theResult___snd__h81533 ;
  assign _theResult___snd__h81533 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h81556 =
	     sfd__h57144 <<
	     IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 ;
  assign _theResult___snd__h90745 = { _theResult____h82498[55:0], 1'd0 } ;
  assign _theResult___snd__h90756 =
	     (!_theResult____h82498[56] && _theResult____h82498[55]) ?
	       _theResult___snd__h90758 :
	       _theResult___snd__h90768 ;
  assign _theResult___snd__h90758 = { _theResult____h82498[54:0], 2'd0 } ;
  assign _theResult___snd__h90768 =
	     (!_theResult____h82498[56] && !_theResult____h82498[55] &&
	      !_theResult____h82498[54] &&
	      !_theResult____h82498[53] &&
	      !_theResult____h82498[52] &&
	      !_theResult____h82498[51] &&
	      !_theResult____h82498[50] &&
	      !_theResult____h82498[49] &&
	      !_theResult____h82498[48] &&
	      !_theResult____h82498[47] &&
	      !_theResult____h82498[46] &&
	      !_theResult____h82498[45] &&
	      !_theResult____h82498[44] &&
	      !_theResult____h82498[43] &&
	      !_theResult____h82498[42] &&
	      !_theResult____h82498[41] &&
	      !_theResult____h82498[40] &&
	      !_theResult____h82498[39] &&
	      !_theResult____h82498[38] &&
	      !_theResult____h82498[37] &&
	      !_theResult____h82498[36] &&
	      !_theResult____h82498[35] &&
	      !_theResult____h82498[34] &&
	      !_theResult____h82498[33] &&
	      !_theResult____h82498[32] &&
	      !_theResult____h82498[31] &&
	      !_theResult____h82498[30] &&
	      !_theResult____h82498[29] &&
	      !_theResult____h82498[28] &&
	      !_theResult____h82498[27] &&
	      !_theResult____h82498[26] &&
	      !_theResult____h82498[25] &&
	      !_theResult____h82498[24] &&
	      !_theResult____h82498[23] &&
	      !_theResult____h82498[22] &&
	      !_theResult____h82498[21] &&
	      !_theResult____h82498[20] &&
	      !_theResult____h82498[19] &&
	      !_theResult____h82498[18] &&
	      !_theResult____h82498[17] &&
	      !_theResult____h82498[16] &&
	      !_theResult____h82498[15] &&
	      !_theResult____h82498[14] &&
	      !_theResult____h82498[13] &&
	      !_theResult____h82498[12] &&
	      !_theResult____h82498[11] &&
	      !_theResult____h82498[10] &&
	      !_theResult____h82498[9] &&
	      !_theResult____h82498[8] &&
	      !_theResult____h82498[7] &&
	      !_theResult____h82498[6] &&
	      !_theResult____h82498[5] &&
	      !_theResult____h82498[4] &&
	      !_theResult____h82498[3] &&
	      !_theResult____h82498[2] &&
	      !_theResult____h82498[1] &&
	      !_theResult____h82498[0]) ?
	       _theResult____h82498 :
	       _theResult___snd__h90774 ;
  assign _theResult___snd__h90774 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h90797 =
	     _theResult____h82498 <<
	     IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 ;
  assign _theResult___snd__h99395 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h99409 :
	       _theResult___snd__h81520 ;
  assign _theResult___snd__h99409 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276) ?
	       sfd__h57144 :
	       _theResult___snd__h99415 ;
  assign _theResult___snd__h99415 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68[54:0],
	       2'd0 } ;
  assign _theResult___snd__h99433 =
	     sfd__h57144 <<
	     IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 ;
  assign _theResult___snd_fst_exp__h100030 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _theResult___fst_exp__h91361 :
	       _theResult___fst_exp__h100027 ;
  assign _theResult___snd_fst_exp__h123290 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ?
	       11'd0 :
	       _theResult___fst_exp__h123287 ;
  assign _theResult___snd_fst_exp__h141719 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _theResult___fst_exp__h132934 :
	       _theResult___fst_exp__h141716 ;
  assign _theResult___snd_fst_exp__h15982 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       _theResult___fst_exp__h15424 :
	       _theResult___fst_exp__h15979 ;
  assign _theResult___snd_fst_exp__h15985 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h15982 ;
  assign _theResult___snd_fst_exp__h15988 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ?
	       _theResult___snd_fst_exp__h15985 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h40338 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       _theResult___fst_exp__h39576 :
	       _theResult___fst_exp__h40335 ;
  assign _theResult___snd_fst_exp__h40341 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h40338 ;
  assign _theResult___snd_fst_exp__h40344 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ?
	       _theResult___snd_fst_exp__h40341 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h50067 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       _theResult___fst_exp__h49306 :
	       _theResult___fst_exp__h50064 ;
  assign _theResult___snd_fst_exp__h50070 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h50067 ;
  assign _theResult___snd_fst_exp__h50073 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ?
	       _theResult___snd_fst_exp__h50070 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h82123 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       _theResult___fst_exp__h73508 :
	       _theResult___fst_exp__h82120 ;
  assign _theResult___snd_fst_exp__h9775 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       _theResult___fst_exp__h9216 :
	       _theResult___fst_exp__h9772 ;
  assign _theResult___snd_fst_exp__h9778 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h9775 ;
  assign _theResult___snd_fst_exp__h9781 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ?
	       _theResult___snd_fst_exp__h9778 :
	       8'd255 ;
  assign _theResult___snd_fst_sfd__h100031 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _theResult___fst_sfd__h91362 :
	       _theResult___fst_sfd__h100028 ;
  assign _theResult___snd_fst_sfd__h103605 =
	     (value__h101722 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h101719 ;
  assign _theResult___snd_fst_sfd__h123291 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ?
	       52'd0 :
	       _theResult___fst_sfd__h123288 ;
  assign _theResult___snd_fst_sfd__h141720 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _theResult___fst_sfd__h132935 :
	       _theResult___fst_sfd__h141717 ;
  assign _theResult___snd_fst_sfd__h15983 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       _theResult___fst_sfd__h15425 :
	       _theResult___fst_sfd__h15980 ;
  assign _theResult___snd_fst_sfd__h40339 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       _theResult___fst_sfd__h39577 :
	       _theResult___fst_sfd__h40336 ;
  assign _theResult___snd_fst_sfd__h50068 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       _theResult___fst_sfd__h49307 :
	       _theResult___fst_sfd__h50065 ;
  assign _theResult___snd_fst_sfd__h57098 =
	     (value__h52983[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h52983[51:29] ;
  assign _theResult___snd_fst_sfd__h82124 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       _theResult___fst_sfd__h73509 :
	       _theResult___fst_sfd__h82121 ;
  assign _theResult___snd_fst_sfd__h9776 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       _theResult___fst_sfd__h9217 :
	       _theResult___fst_sfd__h9773 ;
  assign b__h16687 = { value__h16689, 32'd0 } ;
  assign b__h50768 = { value__h50770, 32'd0 } ;
  assign din_inc___2_exp__h100058 = _theResult___fst_exp__h72881 + 8'd1 ;
  assign din_inc___2_exp__h100082 = _theResult___fst_exp__h81567 + 8'd1 ;
  assign din_inc___2_exp__h100112 = _theResult___fst_exp__h90734 + 8'd1 ;
  assign din_inc___2_exp__h100136 = _theResult___fst_exp__h99449 + 8'd1 ;
  assign din_inc___2_exp__h141751 = _theResult___fst_exp__h122531 + 11'd1 ;
  assign din_inc___2_exp__h141781 = _theResult___fst_exp__h132104 + 11'd1 ;
  assign din_inc___2_exp__h141805 = _theResult___fst_exp__h140935 + 11'd1 ;
  assign din_inc___2_exp__h16018 = x__h15456[7:0] + 8'd1 ;
  assign din_inc___2_exp__h40378 = x__h39608[10:0] + 11'd1 ;
  assign din_inc___2_exp__h50103 = x__h49338[10:0] + 11'd1 ;
  assign din_inc___2_exp__h9815 = x__h9248[7:0] + 8'd1 ;
  assign guard__h114570 =
	     { IF_theResult___snd22482_BIT_4_THEN_2_ELSE_0__q95[1],
	       { _theResult___snd__h122482[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h123878 =
	     { IF_sfdin32098_BIT_4_THEN_2_ELSE_0__q98[1],
	       { sfdin__h132098[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h124476 = x__h124576 != 57'd0 ;
  assign guard__h132945 =
	     { IF_theResult___snd40881_BIT_4_THEN_2_ELSE_0__q101[1],
	       { _theResult___snd__h140881[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h14915 =
	     { IF_sfd___34905_BIT_8_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h14905[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h15441 =
	     { IF_sfd___34905_BIT_7_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h14905[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h16620 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[23],
	       { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h17174 =
	     { IF_x7363_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h17363[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h18272 =
	     { IF_x8493_BIT_24_THEN_2_ELSE_0__q32[1],
	       { x__h18493[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h38863 =
	     { IF_sfd___38853_BIT_2_THEN_2_ELSE_0__q33[1],
	       { sfd___3__h38853[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h39593 =
	     { IF_sfd___38853_BIT_1_THEN_2_ELSE_0__q34[1],
	       { sfd___3__h38853[0], 53'd0 } != 54'd0 } ;
  assign guard__h48594 =
	     { IF_sfd___38584_BIT_2_THEN_2_ELSE_0__q47[1],
	       { sfd___3__h48584[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h49323 =
	     { IF_sfd___38584_BIT_1_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h48584[0], 53'd0 } != 54'd0 } ;
  assign guard__h50701 =
	     { IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[52],
	       { IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h51255 =
	     { IF_x1444_BIT_53_THEN_2_ELSE_0__q58[1],
	       { x__h51444[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h52336 =
	     { IF_x2557_BIT_53_THEN_2_ELSE_0__q59[1],
	       { x__h52557[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h64784 =
	     { IF_sfdin2875_BIT_33_THEN_2_ELSE_0__q61[1],
	       { sfdin__h72875[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h73519 =
	     { IF_theResult___snd1518_BIT_33_THEN_2_ELSE_0__q63[1],
	       { _theResult___snd__h81518[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h82508 =
	     { IF_sfdin0728_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h90728[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h83106 = x__h83206 != 57'd0 ;
  assign guard__h8703 =
	     { IF_sfd___3693_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h8693[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h91372 =
	     { IF_theResult___snd9395_BIT_33_THEN_2_ELSE_0__q69[1],
	       { _theResult___snd__h99395[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h9233 =
	     { IF_sfd___3693_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h8693[6:0], 24'd0 } != 31'd0 } ;
  assign out1___1__h17114 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56:24] +
	     33'd1 ;
  assign out1___1__h51195 =
	     IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85:53] +
	     33'd1 ;
  assign out___1_sfd__h101719 = { value__h101722, 29'd0 } ;
  assign out_exp__h123189 =
	     _theResult___snd__h122482[5] ?
	       _theResult___exp__h123186 :
	       _theResult___fst_exp__h122531 ;
  assign out_exp__h132836 =
	     sfdin__h132098[5] ?
	       _theResult___exp__h132833 :
	       _theResult___fst_exp__h132104 ;
  assign out_exp__h141618 =
	     _theResult___snd__h140881[5] ?
	       _theResult___exp__h141615 :
	       _theResult___fst_exp__h140935 ;
  assign out_exp__h15331 =
	     sfd___3__h14905[9] ? _theResult___exp__h15328 : 8'd0 ;
  assign out_exp__h15883 =
	     sfd___3__h14905[8] ? _theResult___exp__h15880 : x__h15456[7:0] ;
  assign out_exp__h39482 =
	     sfd___3__h38853[3] ? _theResult___exp__h39479 : 11'd0 ;
  assign out_exp__h40238 =
	     sfd___3__h38853[2] ? _theResult___exp__h40235 : x__h39608[10:0] ;
  assign out_exp__h49213 =
	     sfd___3__h48584[3] ? _theResult___exp__h49210 : 11'd0 ;
  assign out_exp__h49968 =
	     sfd___3__h48584[2] ? _theResult___exp__h49965 : x__h49338[10:0] ;
  assign out_exp__h73410 =
	     sfdin__h72875[34] ?
	       _theResult___exp__h73407 :
	       _theResult___fst_exp__h72881 ;
  assign out_exp__h82022 =
	     _theResult___snd__h81518[34] ?
	       _theResult___exp__h82019 :
	       _theResult___fst_exp__h81567 ;
  assign out_exp__h9122 = sfd___3__h8693[9] ? _theResult___exp__h9119 : 8'd0 ;
  assign out_exp__h91263 =
	     sfdin__h90728[34] ?
	       _theResult___exp__h91260 :
	       _theResult___fst_exp__h90734 ;
  assign out_exp__h9675 =
	     sfd___3__h8693[8] ? _theResult___exp__h9672 : x__h9248[7:0] ;
  assign out_exp__h99929 =
	     _theResult___snd__h99395[34] ?
	       _theResult___exp__h99926 :
	       _theResult___fst_exp__h99449 ;
  assign out_sfd__h123190 =
	     _theResult___snd__h122482[5] ?
	       _theResult___sfd__h123187 :
	       _theResult___snd__h122482[56:5] ;
  assign out_sfd__h132837 =
	     sfdin__h132098[5] ?
	       _theResult___sfd__h132834 :
	       sfdin__h132098[56:5] ;
  assign out_sfd__h141619 =
	     _theResult___snd__h140881[5] ?
	       _theResult___sfd__h141616 :
	       _theResult___snd__h140881[56:5] ;
  assign out_sfd__h15332 =
	     sfd___3__h14905[9] ?
	       _theResult___sfd__h15329 :
	       sfd___3__h14905[31:9] ;
  assign out_sfd__h15884 =
	     sfd___3__h14905[8] ?
	       _theResult___sfd__h15881 :
	       sfd___3__h14905[30:8] ;
  assign out_sfd__h39483 =
	     sfd___3__h38853[3] ?
	       _theResult___sfd__h39480 :
	       sfd___3__h38853[54:3] ;
  assign out_sfd__h40239 =
	     sfd___3__h38853[2] ?
	       _theResult___sfd__h40236 :
	       sfd___3__h38853[53:2] ;
  assign out_sfd__h49214 =
	     sfd___3__h48584[3] ?
	       _theResult___sfd__h49211 :
	       sfd___3__h48584[54:3] ;
  assign out_sfd__h49969 =
	     sfd___3__h48584[2] ?
	       _theResult___sfd__h49966 :
	       sfd___3__h48584[53:2] ;
  assign out_sfd__h73411 =
	     sfdin__h72875[34] ?
	       _theResult___sfd__h73408 :
	       sfdin__h72875[56:34] ;
  assign out_sfd__h82023 =
	     _theResult___snd__h81518[34] ?
	       _theResult___sfd__h82020 :
	       _theResult___snd__h81518[56:34] ;
  assign out_sfd__h9123 =
	     sfd___3__h8693[9] ?
	       _theResult___sfd__h9120 :
	       sfd___3__h8693[31:9] ;
  assign out_sfd__h91264 =
	     sfdin__h90728[34] ?
	       _theResult___sfd__h91261 :
	       sfdin__h90728[56:34] ;
  assign out_sfd__h9676 =
	     sfd___3__h8693[8] ?
	       _theResult___sfd__h9673 :
	       sfd___3__h8693[30:8] ;
  assign out_sfd__h99930 =
	     _theResult___snd__h99395[34] ?
	       _theResult___sfd__h99927 :
	       _theResult___snd__h99395[56:34] ;
  assign requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930 :
		NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931) ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] ||
	      NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 &&
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 &&
	      x__h52557[85:54] == 32'hFFFFFFFF) ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852 =
	     { requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 } ==
	     5'd0 ||
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841 ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930 =
	     requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875) &&
	     !requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      !requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880) ;
  assign requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076 ;
  assign requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841 =
	     (requestR[159] ||
	      requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838 ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign res___1__h159367 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h159805 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h159815 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h159834 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h28171 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h28407 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h28417 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h28436 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h100515 = { 32'hFFFFFFFF, x__h100521 } ;
  assign res__h142355 =
	     { IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746,
	       x__h101663,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710 } ;
  assign res__h146832 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h151415 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h154154 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935) ?
	       64'd1 :
	       64'd0 ;
  assign res__h156884 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       64'd1 :
	       64'd0 ;
  assign res__h158796 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956 ?
	       64'd1 :
	       64'd0 ;
  assign res__h159850 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h160049 = { 32'hFFFFFFFF, fpu$server_core_response_get[36:5] } ;
  assign res__h19532 =
	     { 32'hFFFFFFFF,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 } ;
  assign res__h19769 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign res__h25279 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26797 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       64'd1 :
	       64'd0 ;
  assign res__h27901 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167 ?
	       64'd1 :
	       64'd0 ;
  assign res__h28452 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign result__h124481 =
	     { _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248[0] |
	       guard__h124476 } ;
  assign result__h83111 =
	     { _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413[56:1],
	       _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413[0] |
	       guard__h83106 } ;
  assign sV1_exp__h1308 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h1309 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h1411 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h1412 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h14905 =
	     requestR[159:128] <<
	     IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 ;
  assign sfd___3__h38853 =
	     sfd__h30852 <<
	     IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 ;
  assign sfd___3__h48584 =
	     sfd__h40832 <<
	     IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 ;
  assign sfd___3__h8693 =
	     sfd__h3789 <<
	     IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 ;
  assign sfd__h122549 =
	     { 1'b0,
	       _theResult___fst_exp__h122531 != 11'd0,
	       _theResult___snd__h122482[56:5] } +
	     54'd1 ;
  assign sfd__h132196 =
	     { 1'b0,
	       _theResult___fst_exp__h132104 != 11'd0,
	       sfdin__h132098[56:5] } +
	     54'd1 ;
  assign sfd__h140954 =
	     { 1'b0,
	       _theResult___fst_exp__h140935 != 11'd0,
	       _theResult___snd__h140881[56:5] } +
	     54'd1 ;
  assign sfd__h14932 = { 2'd0, sfd___3__h14905[31:9] } + 25'd1 ;
  assign sfd__h15471 =
	     { 1'b0, x__h15456[7:0] != 8'd0, sfd___3__h14905[30:8] } + 25'd1 ;
  assign sfd__h30852 = { sfd__h3789, 23'd0 } ;
  assign sfd__h3789 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h38880 = { 2'd0, sfd___3__h38853[54:3] } + 54'd1 ;
  assign sfd__h39623 =
	     { 1'b0, x__h39608[10:0] != 11'd0, sfd___3__h38853[53:2] } +
	     54'd1 ;
  assign sfd__h40832 = { requestR[159:128], 23'd0 } ;
  assign sfd__h48611 = { 2'd0, sfd___3__h48584[54:3] } + 54'd1 ;
  assign sfd__h49353 =
	     { 1'b0, x__h49338[10:0] != 11'd0, sfd___3__h48584[53:2] } +
	     54'd1 ;
  assign sfd__h57144 = { value__h50770, 3'd0 } ;
  assign sfd__h72973 =
	     { 1'b0,
	       _theResult___fst_exp__h72881 != 8'd0,
	       sfdin__h72875[56:34] } +
	     25'd1 ;
  assign sfd__h81585 =
	     { 1'b0,
	       _theResult___fst_exp__h81567 != 8'd0,
	       _theResult___snd__h81518[56:34] } +
	     25'd1 ;
  assign sfd__h8720 = { 2'd0, sfd___3__h8693[31:9] } + 25'd1 ;
  assign sfd__h90826 =
	     { 1'b0,
	       _theResult___fst_exp__h90734 != 8'd0,
	       sfdin__h90728[56:34] } +
	     25'd1 ;
  assign sfd__h9263 =
	     { 1'b0, x__h9248[7:0] != 8'd0, sfd___3__h8693[30:8] } + 25'd1 ;
  assign sfd__h99468 =
	     { 1'b0,
	       _theResult___fst_exp__h99449 != 8'd0,
	       _theResult___snd__h99395[56:34] } +
	     25'd1 ;
  assign sfdin__h132098 =
	     _theResult____h123868[56] ?
	       _theResult___snd__h132115 :
	       _theResult___snd__h132126 ;
  assign sfdin__h72875 =
	     _theResult____h64774[56] ?
	       _theResult___snd__h72892 :
	       _theResult___snd__h72903 ;
  assign sfdin__h90728 =
	     _theResult____h82498[56] ?
	       _theResult___snd__h90745 :
	       _theResult___snd__h90756 ;
  assign value__h101722 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 &&
	      !sV1_sfd__h1309[22]) ?
	       _theResult___fst_sfd__h101977 :
	       sV1_sfd__h1309 ;
  assign value__h16689 = { 1'b0, sV1_exp__h1308 != 8'd0, sV1_sfd__h1309 } ;
  assign value__h50770 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h52983 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h53440 :
	       requestR[179:128] ;
  assign x__h100521 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935,
	       x__h52923,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893 } ;
  assign x__h100636 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039 } ;
  assign x__h101653 =
	     (x__h101663 == 11'd2047 &&
	      IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710[51]) ?
	       64'h7FF8000000000000 :
	       res__h142355 ;
  assign x__h101663 =
	     (sV1_exp__h1308 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h141728 ;
  assign x__h10264 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ||
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h15983 } ;
  assign x__h124576 = b__h16687 << x__h124609 ;
  assign x__h124609 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ;
  assign x__h142457 =
	     { IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829 } ;
  assign x__h143414 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890)))) ;
  assign x__h146964 =
	     { requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896,
	       4'd0 } ;
  assign x__h147997 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905))))) ;
  assign x__h152476 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h154154 ;
  assign x__h15456 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 +
	     9'd127 ;
  assign x__h155206 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h156884 ;
  assign x__h156903 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h157118 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h158796 ;
  assign x__h159347 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h159367 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h159805 :
		  IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983) ;
  assign x__h159973 =
	     fpu$server_core_response_get[69] ?
	       ((fpu$server_core_response_get[35:28] == 8'd255 &&
		 fpu$server_core_response_get[27:5] != 23'd0) ?
		  64'hFFFFFFFF7FC00000 :
		  res__h160049) :
	       ((fpu$server_core_response_get[67:57] == 11'd2047 &&
		 fpu$server_core_response_get[56:5] != 52'd0) ?
		  64'h7FF8000000000000 :
		  fpu$server_core_response_get[68:5]) ;
  assign x__h16122 =
	     { 2'd0,
	       NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667,
	       requestR[159:128] != 32'd0 &&
	       requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841 } ;
  assign x__h16441 = { {32{x__h16444[31]}}, x__h16444 } ;
  assign x__h16444 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936 ;
  assign x__h17363 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877 >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903) &
	     {57{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56]}} ;
  assign x__h17777 =
	     { sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 ||
	       sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 == 23'd0 ||
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947,
	       3'd0,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       (sV1_exp__h1308 != 8'd0 || sV1_sfd__h1309 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958 } ;
  assign x__h18069 = { {32{x__h18072[31]}}, x__h18072 } ;
  assign x__h18072 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 ?
	       32'hFFFFFFFF :
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999 ;
  assign x__h18493 =
	     { sV1_exp__h1308 != 8'd0, sV1_sfd__h1309, 33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 ;
  assign x__h18571 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018 :
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
	       3'd0,
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 == 23'd0) &&
	       (sV1_exp__h1308 != 8'd255 || sV1_sfd__h1309 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 } ;
  assign x__h18853 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088 ;
  assign x__h20893 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090,
	       4'd0 } ;
  assign x__h21522 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105 ;
  assign x__h24082 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h24237 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h24409 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h25279 ;
  assign x__h25927 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h26797 ;
  assign x__h26816 =
	     { sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0 ||
	       sV2_exp__h1411 == 8'd255 && sV2_sfd__h1412 != 23'd0,
	       4'd0 } ;
  assign x__h27031 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h27901 ;
  assign x__h28151 =
	     (sV1_exp__h1308 == 8'd255 && sV1_sfd__h1309 != 23'd0) ?
	       res___1__h28171 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182 ;
  assign x__h30358 = { requestR[127], requestR[190:128] } ;
  assign x__h30514 = { !requestR[127], requestR[190:128] } ;
  assign x__h30672 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h30837 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h40344,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475 } ;
  assign x__h3247 = { 32'hFFFFFFFF, x__h3254 } ;
  assign x__h3254 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3418 = { 32'hFFFFFFFF, x__h3425 } ;
  assign x__h3425 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3586 = { 32'hFFFFFFFF, x__h3593 } ;
  assign x__h3593 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3768 = { 32'hFFFFFFFF, x__h3774 } ;
  assign x__h3774 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373),
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h9776 } ;
  assign x__h39608 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 +
	     12'd1023 ;
  assign x__h40500 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 &&
		_theResult___fst_exp__h40335 == 11'd2047 &&
		_theResult___fst_sfd__h40336 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492 } ;
  assign x__h40820 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h50073,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659 } ;
  assign x__h49338 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 +
	     12'd1023 ;
  assign x__h50203 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 &&
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 &&
		_theResult___fst_exp__h50064 == 11'd2047 &&
		_theResult___fst_sfd__h50065 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676 } ;
  assign x__h50522 = { {32{x__h50525[31]}}, x__h50525 } ;
  assign x__h50525 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770 ;
  assign x__h51444 =
	     IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711 >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737) &
	     {86{IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85]}} ;
  assign x__h51841 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792 } ;
  assign x__h52133 = { {32{x__h52136[31]}}, x__h52136 } ;
  assign x__h52136 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831)) ;
  assign x__h52557 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 ;
  assign x__h52635 =
	     { requestR[191] ?
		 requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852 :
		 requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 } ;
  assign x__h52913 =
	     (x__h52923 == 8'd255 &&
	      IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h100515 ;
  assign x__h52923 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h100039 ;
  assign x__h83206 = sfd__h57144 << x__h83239 ;
  assign x__h83239 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ;
  assign x__h9248 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 +
	     9'd127 ;
  assign x__h9941 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526 } ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 =
	      requestR[194:192];
      3'h1: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd4;
      3'h2: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd3;
      3'h3: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd2;
      3'h4: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd1;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 =
		   3'd0;
    endcase
  end
  always@(guard__h8703 or _theResult___exp__h9119)
  begin
    case (guard__h8703)
      2'b0: CASE_guard703_0b0_0_0b1_theResult___exp119_0b1_ETC__q8 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard703_0b0_0_0b1_theResult___exp119_0b1_ETC__q8 =
	      _theResult___exp__h9119;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395 or
	  guard__h8703 or
	  _theResult___exp__h9119 or
	  CASE_guard703_0b0_0_0b1_theResult___exp119_0b1_ETC__q8)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      (guard__h8703 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h9119;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      CASE_guard703_0b0_0_0b1_theResult___exp119_0b1_ETC__q8;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
		   8'd0;
    endcase
  end
  always@(guard__h8703 or out_exp__h9122 or _theResult___exp__h9119)
  begin
    case (guard__h8703)
      2'b0, 2'b01:
	  CASE_guard703_0b0_0_0b1_0_0b10_out_exp122_0b11_ETC__q9 = 8'd0;
      2'b10:
	  CASE_guard703_0b0_0_0b1_0_0b10_out_exp122_0b11_ETC__q9 =
	      out_exp__h9122;
      2'b11:
	  CASE_guard703_0b0_0_0b1_0_0b10_out_exp122_0b11_ETC__q9 =
	      _theResult___exp__h9119;
    endcase
  end
  always@(guard__h8703 or requestR)
  begin
    case (guard__h8703)
      2'b0, 2'b01, 2'b10:
	  CASE_guard703_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      requestR[159];
      2'd3:
	  CASE_guard703_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      guard__h8703 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h8703)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      (guard__h8703 == 2'b0) ?
		requestR[159] :
		(guard__h8703 == 2'b01 || guard__h8703 == 2'b10 ||
		 guard__h8703 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h9233 or requestR)
  begin
    case (guard__h9233)
      2'b0, 2'b01, 2'b10:
	  CASE_guard233_0b0_requestR_BIT_159_0b1_request_ETC__q12 =
	      requestR[159];
      2'd3:
	  CASE_guard233_0b0_requestR_BIT_159_0b1_request_ETC__q12 =
	      guard__h9233 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h9233)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q13 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q13 =
	      (guard__h9233 == 2'b0) ?
		requestR[159] :
		(guard__h9233 == 2'b01 || guard__h9233 == 2'b10 ||
		 guard__h9233 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q13 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h9233 or x__h9248 or _theResult___exp__h9672)
  begin
    case (guard__h9233)
      2'b0:
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      x__h9248[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      _theResult___exp__h9672;
    endcase
  end
  always@(requestR or
	  x__h9248 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421 or
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_theResu_ETC__q14)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      x__h9248[7:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_theResu_ETC__q14;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
		   8'd0;
    endcase
  end
  always@(guard__h9233 or
	  x__h9248 or out_exp__h9675 or _theResult___exp__h9672)
  begin
    case (guard__h9233)
      2'b0, 2'b01:
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_x248_BI_ETC__q15 =
	      x__h9248[7:0];
      2'b10:
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_x248_BI_ETC__q15 =
	      out_exp__h9675;
      2'b11:
	  CASE_guard233_0b0_x248_BITS_7_TO_0_0b1_x248_BI_ETC__q15 =
	      _theResult___exp__h9672;
    endcase
  end
  always@(guard__h8703 or sfd___3__h8693 or _theResult___sfd__h9120)
  begin
    case (guard__h8703)
      2'b0:
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q16 =
	      sfd___3__h8693[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q16 =
	      _theResult___sfd__h9120;
    endcase
  end
  always@(requestR or
	  sfd___3__h8693 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444 or
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q16)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      sfd___3__h8693[31:9];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q16;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
		   23'd0;
    endcase
  end
  always@(guard__h8703 or
	  sfd___3__h8693 or out_sfd__h9123 or _theResult___sfd__h9120)
  begin
    case (guard__h8703)
      2'b0, 2'b01:
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q17 =
	      sfd___3__h8693[31:9];
      2'b10:
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q17 =
	      out_sfd__h9123;
      2'b11:
	  CASE_guard703_0b0_sfd___3693_BITS_31_TO_9_0b1__ETC__q17 =
	      _theResult___sfd__h9120;
    endcase
  end
  always@(guard__h9233 or sfd___3__h8693 or _theResult___sfd__h9673)
  begin
    case (guard__h9233)
      2'b0:
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q18 =
	      sfd___3__h8693[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q18 =
	      _theResult___sfd__h9673;
    endcase
  end
  always@(requestR or
	  sfd___3__h8693 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462 or
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q18)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      sfd___3__h8693[30:8];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q18;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
		   23'd0;
    endcase
  end
  always@(guard__h9233 or
	  sfd___3__h8693 or out_sfd__h9676 or _theResult___sfd__h9673)
  begin
    case (guard__h9233)
      2'b0, 2'b01:
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q19 =
	      sfd___3__h8693[30:8];
      2'b10:
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q19 =
	      out_sfd__h9676;
      2'b11:
	  CASE_guard233_0b0_sfd___3693_BITS_30_TO_8_0b1__ETC__q19 =
	      _theResult___sfd__h9673;
    endcase
  end
  always@(guard__h14915 or out_exp__h15331 or _theResult___exp__h15328)
  begin
    case (guard__h14915)
      2'b0, 2'b01:
	  CASE_guard4915_0b0_0_0b1_0_0b10_out_exp5331_0b_ETC__q22 = 8'd0;
      2'b10:
	  CASE_guard4915_0b0_0_0b1_0_0b10_out_exp5331_0b_ETC__q22 =
	      out_exp__h15331;
      2'b11:
	  CASE_guard4915_0b0_0_0b1_0_0b10_out_exp5331_0b_ETC__q22 =
	      _theResult___exp__h15328;
    endcase
  end
  always@(guard__h14915 or _theResult___exp__h15328)
  begin
    case (guard__h14915)
      2'b0: CASE_guard4915_0b0_0_0b1_theResult___exp5328_0_ETC__q23 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard4915_0b0_0_0b1_theResult___exp5328_0_ETC__q23 =
	      _theResult___exp__h15328;
    endcase
  end
  always@(requestR or
	  guard__h14915 or
	  _theResult___exp__h15328 or
	  CASE_guard4915_0b0_0_0b1_theResult___exp5328_0_ETC__q23)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard4915_ETC__q24 =
	      (guard__h14915 == 2'b0) ? 8'd0 : _theResult___exp__h15328;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard4915_ETC__q24 =
	      CASE_guard4915_0b0_0_0b1_theResult___exp5328_0_ETC__q23;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard4915_ETC__q24 = 8'd0;
    endcase
  end
  always@(guard__h15441 or x__h15456 or _theResult___exp__h15880)
  begin
    case (guard__h15441)
      2'b0:
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      x__h15456[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      _theResult___exp__h15880;
    endcase
  end
  always@(requestR or
	  x__h15456 or
	  guard__h15441 or
	  _theResult___exp__h15880 or
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_theRe_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      x__h15456[7:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      (guard__h15441 == 2'b0) ?
		x__h15456[7:0] :
		_theResult___exp__h15880;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_theRe_ETC__q25;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
		   8'd0;
    endcase
  end
  always@(guard__h15441 or
	  x__h15456 or out_exp__h15883 or _theResult___exp__h15880)
  begin
    case (guard__h15441)
      2'b0, 2'b01:
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_x5456_ETC__q26 =
	      x__h15456[7:0];
      2'b10:
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_x5456_ETC__q26 =
	      out_exp__h15883;
      2'b11:
	  CASE_guard5441_0b0_x5456_BITS_7_TO_0_0b1_x5456_ETC__q26 =
	      _theResult___exp__h15880;
    endcase
  end
  always@(guard__h15441 or sfd___3__h14905 or _theResult___sfd__h15881)
  begin
    case (guard__h15441)
      2'b0:
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q27 =
	      sfd___3__h14905[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q27 =
	      _theResult___sfd__h15881;
    endcase
  end
  always@(requestR or
	  sfd___3__h14905 or
	  guard__h15441 or
	  _theResult___sfd__h15881 or
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      sfd___3__h14905[30:8];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      (guard__h15441 == 2'b0) ?
		sfd___3__h14905[30:8] :
		_theResult___sfd__h15881;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q27;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
		   23'd0;
    endcase
  end
  always@(guard__h15441 or
	  sfd___3__h14905 or out_sfd__h15884 or _theResult___sfd__h15881)
  begin
    case (guard__h15441)
      2'b0, 2'b01:
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q28 =
	      sfd___3__h14905[30:8];
      2'b10:
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q28 =
	      out_sfd__h15884;
      2'b11:
	  CASE_guard5441_0b0_sfd___34905_BITS_30_TO_8_0b_ETC__q28 =
	      _theResult___sfd__h15881;
    endcase
  end
  always@(guard__h14915 or sfd___3__h14905 or _theResult___sfd__h15329)
  begin
    case (guard__h14915)
      2'b0:
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q29 =
	      sfd___3__h14905[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q29 =
	      _theResult___sfd__h15329;
    endcase
  end
  always@(requestR or
	  sfd___3__h14905 or
	  guard__h14915 or
	  _theResult___sfd__h15329 or
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q29)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      sfd___3__h14905[31:9];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      (guard__h14915 == 2'b0) ?
		sfd___3__h14905[31:9] :
		_theResult___sfd__h15329;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q29;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
		   23'd0;
    endcase
  end
  always@(guard__h14915 or
	  sfd___3__h14905 or out_sfd__h15332 or _theResult___sfd__h15329)
  begin
    case (guard__h14915)
      2'b0, 2'b01:
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q30 =
	      sfd___3__h14905[31:9];
      2'b10:
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q30 =
	      out_sfd__h15332;
      2'b11:
	  CASE_guard4915_0b0_sfd___34905_BITS_31_TO_9_0b_ETC__q30 =
	      _theResult___sfd__h15329;
    endcase
  end
  always@(guard__h38863 or requestR)
  begin
    case (guard__h38863)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8863_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard8863_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h38863 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h38863)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      (guard__h38863 == 2'b0) ?
		requestR[159] :
		(guard__h38863 == 2'b01 || guard__h38863 == 2'b10 ||
		 guard__h38863 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h39593 or requestR)
  begin
    case (guard__h39593)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9593_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      requestR[159];
      2'd3:
	  CASE_guard9593_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      guard__h39593 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h39593)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      (guard__h39593 == 2'b0) ?
		requestR[159] :
		(guard__h39593 == 2'b01 || guard__h39593 == 2'b10 ||
		 guard__h39593 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h39593 or x__h39608 or _theResult___exp__h40235)
  begin
    case (guard__h39593)
      2'b0:
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      x__h39608[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      _theResult___exp__h40235;
    endcase
  end
  always@(requestR or
	  x__h39608 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424 or
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_theR_ETC__q39)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      x__h39608[10:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_theR_ETC__q39;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
		   11'd0;
    endcase
  end
  always@(guard__h39593 or
	  x__h39608 or out_exp__h40238 or _theResult___exp__h40235)
  begin
    case (guard__h39593)
      2'b0, 2'b01:
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_x960_ETC__q40 =
	      x__h39608[10:0];
      2'b10:
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_x960_ETC__q40 =
	      out_exp__h40238;
      2'b11:
	  CASE_guard9593_0b0_x9608_BITS_10_TO_0_0b1_x960_ETC__q40 =
	      _theResult___exp__h40235;
    endcase
  end
  always@(guard__h39593 or sfd___3__h38853 or _theResult___sfd__h40236)
  begin
    case (guard__h39593)
      2'b0:
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q41 =
	      sfd___3__h38853[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q41 =
	      _theResult___sfd__h40236;
    endcase
  end
  always@(requestR or
	  sfd___3__h38853 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465 or
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q41)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      sfd___3__h38853[53:2];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q41;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
		   52'd0;
    endcase
  end
  always@(guard__h39593 or
	  sfd___3__h38853 or out_sfd__h40239 or _theResult___sfd__h40236)
  begin
    case (guard__h39593)
      2'b0, 2'b01:
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q42 =
	      sfd___3__h38853[53:2];
      2'b10:
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q42 =
	      out_sfd__h40239;
      2'b11:
	  CASE_guard9593_0b0_sfd___38853_BITS_53_TO_2_0b_ETC__q42 =
	      _theResult___sfd__h40236;
    endcase
  end
  always@(guard__h38863 or _theResult___exp__h39479)
  begin
    case (guard__h38863)
      2'b0: CASE_guard8863_0b0_0_0b1_theResult___exp9479_0_ETC__q43 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8863_0b0_0_0b1_theResult___exp9479_0_ETC__q43 =
	      _theResult___exp__h39479;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398 or
	  guard__h38863 or
	  _theResult___exp__h39479 or
	  CASE_guard8863_0b0_0_0b1_theResult___exp9479_0_ETC__q43)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      (guard__h38863 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h39479;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      CASE_guard8863_0b0_0_0b1_theResult___exp9479_0_ETC__q43;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
		   11'd0;
    endcase
  end
  always@(guard__h38863 or out_exp__h39482 or _theResult___exp__h39479)
  begin
    case (guard__h38863)
      2'b0, 2'b01:
	  CASE_guard8863_0b0_0_0b1_0_0b10_out_exp9482_0b_ETC__q44 = 11'd0;
      2'b10:
	  CASE_guard8863_0b0_0_0b1_0_0b10_out_exp9482_0b_ETC__q44 =
	      out_exp__h39482;
      2'b11:
	  CASE_guard8863_0b0_0_0b1_0_0b10_out_exp9482_0b_ETC__q44 =
	      _theResult___exp__h39479;
    endcase
  end
  always@(guard__h38863 or sfd___3__h38853 or _theResult___sfd__h39480)
  begin
    case (guard__h38863)
      2'b0:
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q45 =
	      sfd___3__h38853[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q45 =
	      _theResult___sfd__h39480;
    endcase
  end
  always@(requestR or
	  sfd___3__h38853 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447 or
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q45)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      sfd___3__h38853[54:3];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q45;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
		   52'd0;
    endcase
  end
  always@(guard__h38863 or
	  sfd___3__h38853 or out_sfd__h39483 or _theResult___sfd__h39480)
  begin
    case (guard__h38863)
      2'b0, 2'b01:
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q46 =
	      sfd___3__h38853[54:3];
      2'b10:
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q46 =
	      out_sfd__h39483;
      2'b11:
	  CASE_guard8863_0b0_sfd___38853_BITS_54_TO_3_0b_ETC__q46 =
	      _theResult___sfd__h39480;
    endcase
  end
  always@(guard__h48594 or out_exp__h49213 or _theResult___exp__h49210)
  begin
    case (guard__h48594)
      2'b0, 2'b01:
	  CASE_guard8594_0b0_0_0b1_0_0b10_out_exp9213_0b_ETC__q49 = 11'd0;
      2'b10:
	  CASE_guard8594_0b0_0_0b1_0_0b10_out_exp9213_0b_ETC__q49 =
	      out_exp__h49213;
      2'b11:
	  CASE_guard8594_0b0_0_0b1_0_0b10_out_exp9213_0b_ETC__q49 =
	      _theResult___exp__h49210;
    endcase
  end
  always@(guard__h48594 or _theResult___exp__h49210)
  begin
    case (guard__h48594)
      2'b0: CASE_guard8594_0b0_0_0b1_theResult___exp9210_0_ETC__q50 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8594_0b0_0_0b1_theResult___exp9210_0_ETC__q50 =
	      _theResult___exp__h49210;
    endcase
  end
  always@(requestR or
	  guard__h48594 or
	  _theResult___exp__h49210 or
	  CASE_guard8594_0b0_0_0b1_theResult___exp9210_0_ETC__q50)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard8594_ETC__q51 =
	      (guard__h48594 == 2'b0) ? 11'd0 : _theResult___exp__h49210;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard8594_ETC__q51 =
	      CASE_guard8594_0b0_0_0b1_theResult___exp9210_0_ETC__q50;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard8594_ETC__q51 =
		   11'd0;
    endcase
  end
  always@(guard__h49323 or x__h49338 or _theResult___exp__h49965)
  begin
    case (guard__h49323)
      2'b0:
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      x__h49338[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      _theResult___exp__h49965;
    endcase
  end
  always@(requestR or
	  x__h49338 or
	  guard__h49323 or
	  _theResult___exp__h49965 or
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_theR_ETC__q52)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      x__h49338[10:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      (guard__h49323 == 2'b0) ?
		x__h49338[10:0] :
		_theResult___exp__h49965;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_theR_ETC__q52;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
		   11'd0;
    endcase
  end
  always@(guard__h49323 or
	  x__h49338 or out_exp__h49968 or _theResult___exp__h49965)
  begin
    case (guard__h49323)
      2'b0, 2'b01:
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_x933_ETC__q53 =
	      x__h49338[10:0];
      2'b10:
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_x933_ETC__q53 =
	      out_exp__h49968;
      2'b11:
	  CASE_guard9323_0b0_x9338_BITS_10_TO_0_0b1_x933_ETC__q53 =
	      _theResult___exp__h49965;
    endcase
  end
  always@(guard__h49323 or sfd___3__h48584 or _theResult___sfd__h49966)
  begin
    case (guard__h49323)
      2'b0:
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h48584[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h49966;
    endcase
  end
  always@(requestR or
	  sfd___3__h48584 or
	  guard__h49323 or
	  _theResult___sfd__h49966 or
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q54)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      sfd___3__h48584[53:2];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      (guard__h49323 == 2'b0) ?
		sfd___3__h48584[53:2] :
		_theResult___sfd__h49966;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q54;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
		   52'd0;
    endcase
  end
  always@(guard__h49323 or
	  sfd___3__h48584 or out_sfd__h49969 or _theResult___sfd__h49966)
  begin
    case (guard__h49323)
      2'b0, 2'b01:
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q55 =
	      sfd___3__h48584[53:2];
      2'b10:
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q55 =
	      out_sfd__h49969;
      2'b11:
	  CASE_guard9323_0b0_sfd___38584_BITS_53_TO_2_0b_ETC__q55 =
	      _theResult___sfd__h49966;
    endcase
  end
  always@(guard__h48594 or sfd___3__h48584 or _theResult___sfd__h49211)
  begin
    case (guard__h48594)
      2'b0:
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h48584[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h49211;
    endcase
  end
  always@(requestR or
	  sfd___3__h48584 or
	  guard__h48594 or
	  _theResult___sfd__h49211 or
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q56)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      sfd___3__h48584[54:3];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      (guard__h48594 == 2'b0) ?
		sfd___3__h48584[54:3] :
		_theResult___sfd__h49211;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q56;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
		   52'd0;
    endcase
  end
  always@(guard__h48594 or
	  sfd___3__h48584 or out_sfd__h49214 or _theResult___sfd__h49211)
  begin
    case (guard__h48594)
      2'b0, 2'b01:
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q57 =
	      sfd___3__h48584[54:3];
      2'b10:
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q57 =
	      out_sfd__h49214;
      2'b11:
	  CASE_guard8594_0b0_sfd___38584_BITS_54_TO_3_0b_ETC__q57 =
	      _theResult___sfd__h49211;
    endcase
  end
  always@(guard__h64784 or
	  _theResult___fst_exp__h72881 or _theResult___exp__h73407)
  begin
    case (guard__h64784)
      2'b0:
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q70 =
	      _theResult___fst_exp__h72881;
      2'b01, 2'b10, 2'b11:
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q70 =
	      _theResult___exp__h73407;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h72881 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228 or
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q70)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      _theResult___fst_exp__h72881;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q70;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
		   8'd0;
    endcase
  end
  always@(guard__h64784 or
	  _theResult___fst_exp__h72881 or
	  out_exp__h73410 or _theResult___exp__h73407)
  begin
    case (guard__h64784)
      2'b0, 2'b01:
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q71 =
	      _theResult___fst_exp__h72881;
      2'b10:
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q71 =
	      out_exp__h73410;
      2'b11:
	  CASE_guard4784_0b0_theResult___fst_exp2881_0b1_ETC__q71 =
	      _theResult___exp__h73407;
    endcase
  end
  always@(guard__h82508 or
	  _theResult___fst_exp__h90734 or _theResult___exp__h91260)
  begin
    case (guard__h82508)
      2'b0:
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q72 =
	      _theResult___fst_exp__h90734;
      2'b01, 2'b10, 2'b11:
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q72 =
	      _theResult___exp__h91260;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h90734 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712 or
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q72)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      _theResult___fst_exp__h90734;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q72;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
		   8'd0;
    endcase
  end
  always@(guard__h82508 or
	  _theResult___fst_exp__h90734 or
	  out_exp__h91263 or _theResult___exp__h91260)
  begin
    case (guard__h82508)
      2'b0, 2'b01:
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q73 =
	      _theResult___fst_exp__h90734;
      2'b10:
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q73 =
	      out_exp__h91263;
      2'b11:
	  CASE_guard2508_0b0_theResult___fst_exp0734_0b1_ETC__q73 =
	      _theResult___exp__h91260;
    endcase
  end
  always@(guard__h73519 or
	  _theResult___fst_exp__h81567 or _theResult___exp__h82019)
  begin
    case (guard__h73519)
      2'b0:
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q74 =
	      _theResult___fst_exp__h81567;
      2'b01, 2'b10, 2'b11:
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q74 =
	      _theResult___exp__h82019;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h81567 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385 or
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q74)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      _theResult___fst_exp__h81567;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q74;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
		   8'd0;
    endcase
  end
  always@(guard__h73519 or
	  _theResult___fst_exp__h81567 or
	  out_exp__h82022 or _theResult___exp__h82019)
  begin
    case (guard__h73519)
      2'b0, 2'b01:
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q75 =
	      _theResult___fst_exp__h81567;
      2'b10:
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q75 =
	      out_exp__h82022;
      2'b11:
	  CASE_guard3519_0b0_theResult___fst_exp1567_0b1_ETC__q75 =
	      _theResult___exp__h82019;
    endcase
  end
  always@(guard__h91372 or
	  _theResult___fst_exp__h99449 or _theResult___exp__h99926)
  begin
    case (guard__h91372)
      2'b0:
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q76 =
	      _theResult___fst_exp__h99449;
      2'b01, 2'b10, 2'b11:
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q76 =
	      _theResult___exp__h99926;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h99449 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781 or
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q76)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      _theResult___fst_exp__h99449;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q76;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
		   8'd0;
    endcase
  end
  always@(guard__h91372 or
	  _theResult___fst_exp__h99449 or
	  out_exp__h99929 or _theResult___exp__h99926)
  begin
    case (guard__h91372)
      2'b0, 2'b01:
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q77 =
	      _theResult___fst_exp__h99449;
      2'b10:
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q77 =
	      out_exp__h99929;
      2'b11:
	  CASE_guard1372_0b0_theResult___fst_exp9449_0b1_ETC__q77 =
	      _theResult___exp__h99926;
    endcase
  end
  always@(guard__h64784 or sfdin__h72875 or _theResult___sfd__h73408)
  begin
    case (guard__h64784)
      2'b0:
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q78 =
	      sfdin__h72875[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q78 =
	      _theResult___sfd__h73408;
    endcase
  end
  always@(requestR or
	  sfdin__h72875 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815 or
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q78)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      sfdin__h72875[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q78;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
		   23'd0;
    endcase
  end
  always@(guard__h64784 or
	  sfdin__h72875 or out_sfd__h73411 or _theResult___sfd__h73408)
  begin
    case (guard__h64784)
      2'b0, 2'b01:
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q79 =
	      sfdin__h72875[56:34];
      2'b10:
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q79 =
	      out_sfd__h73411;
      2'b11:
	  CASE_guard4784_0b0_sfdin2875_BITS_56_TO_34_0b1_ETC__q79 =
	      _theResult___sfd__h73408;
    endcase
  end
  always@(guard__h73519 or
	  _theResult___snd__h81518 or _theResult___sfd__h82020)
  begin
    case (guard__h73519)
      2'b0:
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q80 =
	      _theResult___snd__h81518[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q80 =
	      _theResult___sfd__h82020;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h81518 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834 or
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q80)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      _theResult___snd__h81518[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q80;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
		   23'd0;
    endcase
  end
  always@(guard__h73519 or
	  _theResult___snd__h81518 or
	  out_sfd__h82023 or _theResult___sfd__h82020)
  begin
    case (guard__h73519)
      2'b0, 2'b01:
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q81 =
	      _theResult___snd__h81518[56:34];
      2'b10:
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q81 =
	      out_sfd__h82023;
      2'b11:
	  CASE_guard3519_0b0_theResult___snd1518_BITS_56_ETC__q81 =
	      _theResult___sfd__h82020;
    endcase
  end
  always@(guard__h82508 or sfdin__h90728 or _theResult___sfd__h91261)
  begin
    case (guard__h82508)
      2'b0:
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q82 =
	      sfdin__h90728[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q82 =
	      _theResult___sfd__h91261;
    endcase
  end
  always@(requestR or
	  sfdin__h90728 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861 or
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q82)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      sfdin__h90728[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q82;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
		   23'd0;
    endcase
  end
  always@(guard__h82508 or
	  sfdin__h90728 or out_sfd__h91264 or _theResult___sfd__h91261)
  begin
    case (guard__h82508)
      2'b0, 2'b01:
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q83 =
	      sfdin__h90728[56:34];
      2'b10:
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q83 =
	      out_sfd__h91264;
      2'b11:
	  CASE_guard2508_0b0_sfdin0728_BITS_56_TO_34_0b1_ETC__q83 =
	      _theResult___sfd__h91261;
    endcase
  end
  always@(guard__h91372 or
	  _theResult___snd__h99395 or _theResult___sfd__h99927)
  begin
    case (guard__h91372)
      2'b0:
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q84 =
	      _theResult___snd__h99395[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q84 =
	      _theResult___sfd__h99927;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h99395 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880 or
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q84)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      _theResult___snd__h99395[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q84;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
		   23'd0;
    endcase
  end
  always@(guard__h91372 or
	  _theResult___snd__h99395 or
	  out_sfd__h99930 or _theResult___sfd__h99927)
  begin
    case (guard__h91372)
      2'b0, 2'b01:
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q85 =
	      _theResult___snd__h99395[56:34];
      2'b10:
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q85 =
	      out_sfd__h99930;
      2'b11:
	  CASE_guard1372_0b0_theResult___snd9395_BITS_56_ETC__q85 =
	      _theResult___sfd__h99927;
    endcase
  end
  always@(guard__h64784 or requestR)
  begin
    case (guard__h64784)
      2'b0, 2'b01, 2'b10:
	  CASE_guard4784_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      requestR[191];
      2'd3:
	  CASE_guard4784_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      guard__h64784 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h64784)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      (guard__h64784 == 2'b0) ?
		requestR[191] :
		(guard__h64784 == 2'b01 || guard__h64784 == 2'b10 ||
		 guard__h64784 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h73519 or requestR)
  begin
    case (guard__h73519)
      2'b0, 2'b01, 2'b10:
	  CASE_guard3519_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      requestR[191];
      2'd3:
	  CASE_guard3519_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      guard__h73519 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h73519)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      (guard__h73519 == 2'b0) ?
		requestR[191] :
		(guard__h73519 == 2'b01 || guard__h73519 == 2'b10 ||
		 guard__h73519 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h82508 or requestR)
  begin
    case (guard__h82508)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2508_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      requestR[191];
      2'd3:
	  CASE_guard2508_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      guard__h82508 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h82508)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      (guard__h82508 == 2'b0) ?
		requestR[191] :
		(guard__h82508 == 2'b01 || guard__h82508 == 2'b10 ||
		 guard__h82508 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h91372 or requestR)
  begin
    case (guard__h91372)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1372_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      requestR[191];
      2'd3:
	  CASE_guard1372_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      guard__h91372 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h91372)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      (guard__h91372 == 2'b0) ?
		requestR[191] :
		(guard__h91372 == 2'b01 || guard__h91372 == 2'b10 ||
		 guard__h91372 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h114570 or
	  _theResult___fst_exp__h122531 or _theResult___exp__h123186)
  begin
    case (guard__h114570)
      2'b0:
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q102 =
	      _theResult___fst_exp__h122531;
      2'b01, 2'b10, 2'b11:
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q102 =
	      _theResult___exp__h123186;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h122531 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224 or
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q102)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      _theResult___fst_exp__h122531;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q102;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
		   11'd0;
    endcase
  end
  always@(guard__h114570 or
	  _theResult___fst_exp__h122531 or
	  out_exp__h123189 or _theResult___exp__h123186)
  begin
    case (guard__h114570)
      2'b0, 2'b01:
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q103 =
	      _theResult___fst_exp__h122531;
      2'b10:
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q103 =
	      out_exp__h123189;
      2'b11:
	  CASE_guard14570_0b0_theResult___fst_exp22531_0_ETC__q103 =
	      _theResult___exp__h123186;
    endcase
  end
  always@(guard__h123878 or
	  _theResult___fst_exp__h132104 or _theResult___exp__h132833)
  begin
    case (guard__h123878)
      2'b0:
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q104 =
	      _theResult___fst_exp__h132104;
      2'b01, 2'b10, 2'b11:
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q104 =
	      _theResult___exp__h132833;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h132104 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549 or
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q104)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      _theResult___fst_exp__h132104;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q104;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
		   11'd0;
    endcase
  end
  always@(guard__h123878 or
	  _theResult___fst_exp__h132104 or
	  out_exp__h132836 or _theResult___exp__h132833)
  begin
    case (guard__h123878)
      2'b0, 2'b01:
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q105 =
	      _theResult___fst_exp__h132104;
      2'b10:
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q105 =
	      out_exp__h132836;
      2'b11:
	  CASE_guard23878_0b0_theResult___fst_exp32104_0_ETC__q105 =
	      _theResult___exp__h132833;
    endcase
  end
  always@(guard__h132945 or
	  _theResult___fst_exp__h140935 or _theResult___exp__h141615)
  begin
    case (guard__h132945)
      2'b0:
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q106 =
	      _theResult___fst_exp__h140935;
      2'b01, 2'b10, 2'b11:
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q106 =
	      _theResult___exp__h141615;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h140935 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618 or
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q106)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      _theResult___fst_exp__h140935;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q106;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
		   11'd0;
    endcase
  end
  always@(guard__h132945 or
	  _theResult___fst_exp__h140935 or
	  out_exp__h141618 or _theResult___exp__h141615)
  begin
    case (guard__h132945)
      2'b0, 2'b01:
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q107 =
	      _theResult___fst_exp__h140935;
      2'b10:
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q107 =
	      out_exp__h141618;
      2'b11:
	  CASE_guard32945_0b0_theResult___fst_exp40935_0_ETC__q107 =
	      _theResult___exp__h141615;
    endcase
  end
  always@(guard__h114570 or requestR)
  begin
    case (guard__h114570)
      2'b0, 2'b01, 2'b10:
	  CASE_guard14570_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard14570_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      guard__h114570 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h114570)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      (guard__h114570 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h114570 == 2'b01 || guard__h114570 == 2'b10 ||
		 guard__h114570 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h123878 or requestR)
  begin
    case (guard__h123878)
      2'b0, 2'b01, 2'b10:
	  CASE_guard23878_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard23878_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      guard__h123878 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h123878)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      (guard__h123878 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h123878 == 2'b01 || guard__h123878 == 2'b10 ||
		 guard__h123878 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h132945 or requestR)
  begin
    case (guard__h132945)
      2'b0, 2'b01, 2'b10:
	  CASE_guard32945_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard32945_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      guard__h132945 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h132945)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      (guard__h132945 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h132945 == 2'b01 || guard__h132945 == 2'b10 ||
		 guard__h132945 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h114570 or
	  _theResult___snd__h122482 or _theResult___sfd__h123187)
  begin
    case (guard__h114570)
      2'b0:
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q114 =
	      _theResult___snd__h122482[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q114 =
	      _theResult___sfd__h123187;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h122482 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651 or
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q114)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      _theResult___snd__h122482[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q114;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
		   52'd0;
    endcase
  end
  always@(guard__h114570 or
	  _theResult___snd__h122482 or
	  out_sfd__h123190 or _theResult___sfd__h123187)
  begin
    case (guard__h114570)
      2'b0, 2'b01:
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q115 =
	      _theResult___snd__h122482[56:5];
      2'b10:
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q115 =
	      out_sfd__h123190;
      2'b11:
	  CASE_guard14570_0b0_theResult___snd22482_BITS__ETC__q115 =
	      _theResult___sfd__h123187;
    endcase
  end
  always@(guard__h132945 or
	  _theResult___snd__h140881 or _theResult___sfd__h141616)
  begin
    case (guard__h132945)
      2'b0:
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q116 =
	      _theResult___snd__h140881[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q116 =
	      _theResult___sfd__h141616;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h140881 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697 or
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q116)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      _theResult___snd__h140881[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q116;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
		   52'd0;
    endcase
  end
  always@(guard__h132945 or
	  _theResult___snd__h140881 or
	  out_sfd__h141619 or _theResult___sfd__h141616)
  begin
    case (guard__h132945)
      2'b0, 2'b01:
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q117 =
	      _theResult___snd__h140881[56:5];
      2'b10:
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q117 =
	      out_sfd__h141619;
      2'b11:
	  CASE_guard32945_0b0_theResult___snd40881_BITS__ETC__q117 =
	      _theResult___sfd__h141616;
    endcase
  end
  always@(guard__h123878 or sfdin__h132098 or _theResult___sfd__h132834)
  begin
    case (guard__h123878)
      2'b0:
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q118 =
	      sfdin__h132098[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q118 =
	      _theResult___sfd__h132834;
    endcase
  end
  always@(requestR or
	  sfdin__h132098 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678 or
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q118)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      sfdin__h132098[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q118;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
		   52'd0;
    endcase
  end
  always@(guard__h123878 or
	  sfdin__h132098 or out_sfd__h132837 or _theResult___sfd__h132834)
  begin
    case (guard__h123878)
      2'b0, 2'b01:
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q119 =
	      sfdin__h132098[56:5];
      2'b10:
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q119 =
	      out_sfd__h132837;
      2'b11:
	  CASE_guard23878_0b0_sfdin32098_BITS_56_TO_5_0b_ETC__q119 =
	      _theResult___sfd__h132834;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N ==  1'b0)
      begin
        stateR <=   2'd0;
      end
    else
      begin
        if (stateR$EN) stateR <=   stateR$D_IN;
      end
    if (requestR$EN) requestR <=   requestR$D_IN;
    if (resultR$EN) resultR <=   resultR$D_IN;
  end

  // synopsys translate_off
  


 // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  
 // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1105 = $stime;
	  #0;
	end
    v__h1099 = v__h1105 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFADD: ", v__h1099);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1576 = $stime;
	  #0;
	end
    v__h1570 = v__h1576 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSUB: ", v__h1570);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1765 = $stime;
	  #0;
	end
    v__h1759 = v__h1765 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMUL: ", v__h1759);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1966 = $stime;
	  #0;
	end
    v__h1960 = v__h1966 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMADD_S ", v__h1960);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2221 = $stime;
	  #0;
	end
    v__h2215 = v__h2221 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMSUB_S ", v__h2215);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2406 = $stime;
	  #0;
	end
    v__h2400 = v__h2406 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFNMADD_S ", v__h2400);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2591 = $stime;
	  #0;
	end
    v__h2585 = v__h2591 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFNMSUB_S ", v__h2585);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2783 = $stime;
	  #0;
	end
    v__h2777 = v__h2783 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFDIV_S ", v__h2777);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2972 = $stime;
	  #0;
	end
    v__h2966 = v__h2972 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSQRT_S ", v__h2966);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3160 = $stime;
	  #0;
	end
    v__h3154 = v__h3160 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJ_S ", v__h3154);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3338 = $stime;
	  #0;
	end
    v__h3332 = v__h3338 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJN_S ", v__h3332);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3506 = $stime;
	  #0;
	end
    v__h3500 = v__h3506 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJX_S ", v__h3500);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3686 = $stime;
	  #0;
	end
    v__h3680 = v__h3686 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_S_W ", v__h3680);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h10182 = $stime;
	  #0;
	end
    v__h10176 = v__h10182 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_S_WU ", v__h10176);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h16360 = $stime;
	  #0;
	end
    v__h16354 = v__h16360 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_W_S ", v__h16354);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h17986 = $stime;
	  #0;
	end
    v__h17980 = v__h17986 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_WU_S ", v__h17980);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h18768 = $stime;
	  #0;
	end
    v__h18762 = v__h18768 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMIN_S ", v__h18762);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h21437 = $stime;
	  #0;
	end
    v__h21431 = v__h21437 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMAX_S ", v__h21431);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24003 = $stime;
	  #0;
	end
    v__h23997 = v__h24003 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMV_W_X ", v__h23997);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24158 = $stime;
	  #0;
	end
    v__h24152 = v__h24158 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMV_X_W ", v__h24152);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24328 = $stime;
	  #0;
	end
    v__h24322 = v__h24328 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFEQ_S ", v__h24322);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h25846 = $stime;
	  #0;
	end
    v__h25840 = v__h25846 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFLT_S ", v__h25840);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h26950 = $stime;
	  #0;
	end
    v__h26944 = v__h26950 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFLE_S ", v__h26944);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28072 = $stime;
	  #0;
	end
    v__h28066 = v__h28072 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCLASS_S ", v__h28066);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28555 = $stime;
	  #0;
	end
    v__h28549 = v__h28555 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFADD_D ", v__h28549);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28770 = $stime;
	  #0;
	end
    v__h28764 = v__h28770 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSUB_D ", v__h28764);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMUL_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28959 = $stime;
	  #0;
	end
    v__h28953 = v__h28959 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMUL_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMUL_D ", v__h28953);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29141 = $stime;
	  #0;
	end
    v__h29135 = v__h29141 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMADD_D ", v__h29135);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29339 = $stime;
	  #0;
	end
    v__h29333 = v__h29339 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMSUB_D ", v__h29333);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29524 = $stime;
	  #0;
	end
    v__h29518 = v__h29524 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFNMADD_D ", v__h29518);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29709 = $stime;
	  #0;
	end
    v__h29703 = v__h29709 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFNMSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFNMSUB_D ", v__h29703);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFDIV_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29901 = $stime;
	  #0;
	end
    v__h29895 = v__h29901 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFDIV_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFDIV_D ", v__h29895);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSQRT_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30090 = $stime;
	  #0;
	end
    v__h30084 = v__h30090 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSQRT_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSQRT_D ", v__h30084);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJ_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30278 = $stime;
	  #0;
	end
    v__h30272 = v__h30278 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJ_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJ_D ", v__h30272);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJN_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30434 = $stime;
	  #0;
	end
    v__h30428 = v__h30434 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJN_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJN_D ", v__h30428);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJX_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30592 = $stime;
	  #0;
	end
    v__h30586 = v__h30592 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFSGNJX_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFSGNJX_D ", v__h30586);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30755 = $stime;
	  #0;
	end
    v__h30749 = v__h30755 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_D_W ", v__h30749);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_WU && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h40738 = $stime;
	  #0;
	end
    v__h40732 = v__h40738 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_WU && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_D_WU ", v__h40732);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_W_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h50441 = $stime;
	  #0;
	end
    v__h50435 = v__h50441 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_W_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_W_D ", v__h50435);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_WU_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h52050 = $stime;
	  #0;
	end
    v__h52044 = v__h52050 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_WU_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_WU_D ", v__h52044);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h52832 = $stime;
	  #0;
	end
    v__h52826 = v__h52832 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_S_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_S_D ", v__h52826);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h101572 = $stime;
	  #0;
	end
    v__h101566 = v__h101572 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCVT_D_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCVT_D_S ", v__h101566);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMIN_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h143329 = $stime;
	  #0;
	end
    v__h143323 = v__h143329 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMIN_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMIN_D ", v__h143323);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMAX_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h147912 = $stime;
	  #0;
	end
    v__h147906 = v__h147912 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMAX_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMAX_D ", v__h147906);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFEQ_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h152395 = $stime;
	  #0;
	end
    v__h152389 = v__h152395 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFEQ_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFEQ_D ", v__h152389);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLT_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h155125 = $stime;
	  #0;
	end
    v__h155119 = v__h155125 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLT_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFLT_D ", v__h155119);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLE_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h157037 = $stime;
	  #0;
	end
    v__h157031 = v__h157037 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFLE_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFLE_D ", v__h157031);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_D_X && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h158969 = $stime;
	  #0;
	end
    v__h158963 = v__h158969 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_D_X && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMV_D_X ", v__h158963);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_X_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h159116 = $stime;
	  #0;
	end
    v__h159110 = v__h159116 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFMV_X_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFMV_X_D ", v__h159110);
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCLASS_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h159268 = $stime;
	  #0;
	end
    v__h159262 = v__h159268 / 32'd10;
    if (RST_N !=  1'b0)
      if (WILL_FIRE_RL_doFCLASS_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: FBox_Core.doFCLASS_D ", v__h159262);
  end
  // synopsys translate_on
endmodule  // mkFBox_Core

